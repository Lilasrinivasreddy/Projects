import requests
import json

def search_elasticsearch(api_url, api_key, index_name, query):
    """
    Retrieve chunks from an Elasticsearch index based on a query.

    :param api_url: The base URL of the Elasticsearch instance.
    :param api_key: The API key for authentication.
    :param index_name: The name of the Elasticsearch index.
    :param query: The query to search for.
    :return: The search results.
    """
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"ApiKey {api_key}"
    }

    search_url = f"{api_url}/{index_name}/_search"
    payload = query

    try:
        response = requests.post(search_url, headers=headers, data=json.dumps(payload))
        response.raise_for_status()  # Raise an error for HTTP codes 4xx/5xx
        return response.json()
    except requests.exceptions.RequestException as e:
        print(f"Error querying Elasticsearch: {e}")
        return None

# Example usage
if __name__ == "__main__":
    api_url = ""
    api_key = ""
    index_name = "jysv-dpf-dev"
    query = {
                "_source": ["chunk_data"],
                "query": {
                    "bool": {
                    "filter": [
                                {
                                "term": {
                                    "usecase_name": "aider"
                                }
                                }
                            ],
                    "should": [
                        {
                        "knn": {
                            "field": "text_embedding_768",
                            "query_vector": embedding,
                            "k": 10,
                            "num_candidates": 100
                        }
                        }
                    ]
                    }
                }
    }

    results = search_elasticsearch(api_url, api_key, index_name, query)
    if results:
        print(json.dumps(results, indent=2))
