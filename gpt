def main():
    try:
        # Get the data source from command-line arguments
        data_src = get_data_source_details()

        # Create a logger instance
        logger: logging = set_logger(
            logger_path=config.LOGS_DIR,
            log_filename=f'{data_src}_time_based_rule_profile_cron',
            process_name=f'RP-Cron',
        )
        utils: CommonUtils = CommonUtils(logObj=logger)

        # Dynamically generate the query based on data_src
        query = f"""
        select *
        from {config.dqaas_rule_prfl_mtd}
        WHERE IS_ACTIVE_FLG = 'Y'
        AND DATA_SRC IN {("('TD', 'TD_AGG')" if data_src == 'TD' else f"('{data_src}')")}
        AND (RULE_PRFL_SCHD_TS IS NOT NULL OR RULE_PRFL_SCHD_TS <> '')
        ORDER BY RULE_ID;
        """

        # Execute the query
        df_val = utils.run_bq_sql(
            bq_auth=config.dq_gcp_auth_payload,
            select_query=query
        )

        logger.info(f"Records Found: {len(df_val)}")

        # Validate cron schedules
        cron_schd_for_curr_run = []
        if len(df_val) > 0:
            df_val = df_val.rename(columns={col: str(col).upper() for col in df_val.columns.tolist()})
            cron_schd_for_curr_run = cron_validation(
                logger=logger,
                utils=utils,
                df_val=df_val
            )

            # Filter rules based on valid cron schedules
            if len(cron_schd_for_curr_run) > 0:
                df_val = df_val[df_val["RULE_PRFL_SCHD_TS"].isin(cron_schd_for_curr_run)]

        # If no valid rules are found, exit
        if len(df_val) == 0 or len(cron_schd_for_curr_run) == 0:
            logger.warning("No Tables Scheduled for Current Hour")
            return

        # Pass the rules to the Rule Profile Engine
        request_rule_profile_engine(
            logger=logger,
            utils=utils,
            data_src=data_src,
            df_val=df_val
        )

    except Exception as err:
        logger.error(f"Error in Initiating Rule Profile Scheduled Tables. \nError: {err}")