def load_to_report_results(self, df_report_result: pd.DataFrame, reference_key: str):
    try:
        ## BigQuery Client Connection
        dbclient, db_creds = self.utils.bigquery_client(auth=config.dq_gcp_auth_payload)

        # Assign reference key
        df_report_result["rpt_ref_key"] = reference_key

        # âœ… Ensure 'rpt_seq_num' exists
        if 'rpt_seq_num' not in df_report_result.columns:
            df_report_result['rpt_seq_num'] = 0  # Default value

        # âœ… Convert column names to lowercase to match BigQuery schema
        df_report_result = df_report_result.rename(columns={col: str(col).lower() for col in df_report_result.columns.tolist()})

        # âœ… Ensure correct data types before loading
        numeric_columns = [
            "count_curr", "avg_count_prev", "variance_value", "std_dev_value",
            "sigma_2_value", "min_thresh_value", "max_thresh_value", "pct_change",
            "consistency_score", "dq_score", "rpt_seq_num"
        ]
        for col in numeric_columns:
            if col in df_report_result.columns:
                df_report_result[col] = pd.to_numeric(df_report_result[col], errors='coerce')  # Convert to numeric

        # âœ… Convert datetime columns
        datetime_columns = ["data_dt", "insert_date", "prfl_run_ts"]
        for col in datetime_columns:
            if col in df_report_result.columns:
                df_report_result[col] = pd.to_datetime(df_report_result[col], errors='coerce')

        self.logger.info(f"âœ… DataFrame before BigQuery Load: \n{df_report_result.head()}")

        # âœ… Load the table into BigQuery
        self.utils.load_result_to_bq_report_table(
            dq_bq_client=dbclient,
            dq_credentials=db_creds,
            dq_report_table_name=config.dqaas_profile_rpt,
            df_load_data=df_report_result,
            seq_name='rpt_seq_num',
            column_details=self.custom_profile_report_columns
        )

    except Exception as err:
        self.logger.error(f"ðŸš¨ Error while loading Results to BigQuery. Error: {err}")
