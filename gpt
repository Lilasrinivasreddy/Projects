(0:00) Can you go to that column or that column statement? (0:05) Oh, okay. Suggestion. (0:08) Search for Vega.
Yeah, suggest Vega, I think, right? (0:13) Yeah. Suggest. Suggestion, visualization or something was there, visual? (0:22) No, just search for Vega.
Okay. (0:24) The function that you wrote, right, so you're just calling it here, right, so just call Vega. (0:34) No, just search only for Vega, nothing else.
Yeah. (0:38) Yeah, we are at the bottom. Okay, there's so many.
(0:42) Yeah. Oh, create Vega visualization. (0:44) Okay, yeah, fine.
This one, right, here you see suggest Vega visualization metadata. (0:49) Yes. Line 8, (0:51) while you're parsing that, records df.
Yes. (0:54) Correct? So this is the data coming from database. (0:57) Database, yeah.
Right. (0:59) For metadata. Yeah.
(1:01) Correct. So, no, okay, so suggest Vega visualization metadata. Okay, (1:06) is it two different LLM calls or just only one? (1:10) This is different LLM call.
Earlier, we have one more suggest visualization or something (1:17) that will call our original data. That's fine, it's fine. For Vega, (1:21) how many calls do you have? Only this one and there is one more sample (1:25) thing.
This is a major thing, metadata, suggest Vega visualization metadata. (1:31) Okay, so this is giving me the visualization given a particular question, SQL query and data. (1:35) Yes, yes.
Okay, okay, okay. (1:39) Can you open this prompt? Whatever prompt you have here. (1:43) Okay, so here, this is the prompt, sir, what we added.
(1:48) Right, so here you're giving the sample data. (1:52) Metadata and sample data prompt. Some 100 records are sample data you passed, (1:58) correct? Yes, yes.
(2:00) Okay, so now what happens is it will give you the data, yeah, (2:04) you see line 582 data values list or whatever it is doing, right? (2:08) Yeah. So, here it is (2:11) ingesting the data in it, whatever sample data you give, it is ingesting it in the (2:15) Vega configuration itself. Right, right, yes.
(2:17) Now, what to replace this with the actual data that we have. (2:23) Okay, actual data, okay, so actual data where we are getting properly here in the records, right? (2:31) Yeah, the record itself is having actual data, the only thing is, (2:36) let us say you have 10,000 records coming in, right, go to services.py, (2:40) wherever you have implemented the function, right, go to the function. (2:44) Okay, scroll up, from wherever you get the function, yeah, scroll down a little.
(2:54) Okay, yeah, so you see that df, scroll up three columns, yeah, so you see that df, (3:02) so that is the original data frame, whatever, yeah, that is the original data frame. (3:07) SQL will give you, okay. (3:11) Right, so in line 1612, you are generating the metadata using the data frame and passing that (3:16) metadata.
Data frame, yes. (3:19) Instead what we will do is, we will take sample records, we will just, instead of passing metadata, (3:24) we will take sample 20, 100, whatever records are there, we will take that sample data and (3:29) pass it in to the LLM prompt. Okay, so that point, you are sending question, (3:35) sample 100 records and SQL query.
Right, right. (3:39) Now once you pass this, in the Vega config that it is giving you back, right, it is giving you (3:45) the data also, like if you go to your Google Chrome image that you showed me, right. (3:49) Yeah.
So, yeah, so here this (3:52) Claudio, Gemini Pro, GPT-4, right, all of this, this is coming as part of the JSON. (3:57) JSON, yeah, right, yes. Correct, it is coming in the Vega config JSON.
(4:02) Yes. Now, let us say you have (4:04) more models in your actual data frame, like you have probably 30 more models in your actual data (4:08) frame, correct. Okay, okay.
(4:10) So, you need to replace the data component with the actual data. (4:14) Okay, okay. Your visualization solution is there, but (4:17) the data is getting replaced with the actual data frame.
(4:20) Right, right. So, that is where it gets tricky, because (4:24) LLM, we are sending, we are telling LLM that, you know, we have this sample 20 records, (4:28) and it is generating a visualization or it is creating the data component for those 20 records. (4:33) But in reality, we have like hundreds of records.
(4:36) Yes, yes. Right. (4:38) So, we need to find a way to tell that, you know, okay, hey, model, I have 100 records, (4:44) and whatever you do, whatever visualization you suggest, (4:48) I need to replace the data component with the actual 100 records that I have.
(4:53) Okay. Right. So, one thing that we could do is, (4:57) whatever data we have, we will keep it the same way and we will create a reference to that data.
(5:03) Okay. What I am trying to, let me (5:05) see if I can give you an example. Yeah.
(5:29) Anyone already implemented similar thing, Akhilesh, like LPS or LSP? (5:37) LSP, it is coming in directly from Google. (5:40) Directly. Right, right.
(5:42) So, let me share, let me show you what I am trying to explain. (5:45) Okay. Okay.
(5:54) Okay. Here, if you see, this is for the talk to report. So, what I did is, I am giving this (6:00) KPIs, I am giving visualization suggestions.
Okay. Then I have a data component. Okay.
(6:08) So, now if you take this visualization suggestion, right, here I created a data key, (6:13) which is saying market store those ads by market. Okay. (6:18) So, this is my visualization, this is the data key.
Now, what UI is doing is, it is taking this (6:22) data key and looking into the data and this data component, it is looking for that particular key, (6:28) MTD, YORG. Okay. (6:37) So, this is how I did it for reports or like I give the visual configuration and then I am (6:42) creating a data mapping here.
Okay. (6:46) So, in the VegaConfig also, I think we should do that because VegaConfig, it will have limited (6:53) data. So, instead of giving data key, it is giving you the data values and giving you the (6:57) 20, 30 records.
Right. That 20, 30 records, you need to replace with actual data frame. (7:03) Okay.
And the actual data frame is something you (7:06) can create as a separate component and put a reference to it. So, that way you can (7:13) handle multiple charts. Okay.
(7:16) Right. So, you can. So, this one you are passing in a JSON format? (7:24) Right.
Yeah, this is a JSON, this is coming in as the same response that we sent, right. (7:30) Okay. So, this is coming in as part of talk to report response.
(7:33) Okay. So, from there, you are fetching that details and you are mapping on the original data. (7:41) Exactly.
Okay. So, see, again, I do not know if this will exactly work for what (7:47) you are trying to do, but something like this, we need to come up with a solution, (7:51) right, some mapping, some kind of way to map it or replace it. Because the other thing is, (7:56) we need to save this as an HTML also, like whatever configuration you see, (8:01) we will keep that configuration in memory and next time when someone comes in and they just say (8:06) refresh, right.
So, we keep the configuration the way it is and just refresh this data component (8:13) with the SQL query that we have, like we just rerun the SQL query and refresh this particular (8:18) key. Okay. (8:19) Like if someone wants to refresh daily cross ads, I just rerun this query and refresh this component, (8:26) this data part.
So, that way my visualizations are remaining the same thing. (8:30) My data is refreshing with the latest values. Okay.
(8:35) So, it should be coming dynamically, like whenever we have to extract the data on daily basis, (8:41) let us say for example. So, if the user comes and refresh in that, it should show the latest data. (8:50) Exactly, yes.
Okay. (8:53) Right. So, you can ignore the refresh part for now.
Just look at how if you want to refresh, (8:59) how do we store this configuration and the data mapping? Like how do we correlate this? (9:06) Or even if it is not about refresh, right? If you are coming back today or tomorrow, (9:10) like you know, you look at conversation histories, right? You ask a question today, (9:13) you come back and you look at your history. So, when you are looking at the history today, (9:17) what happens is we are storing the image as a PNG in cache. So, whenever you are loading history, (9:24) it is coming in from your browser cache, the image is coming in.
But going forward, (9:27) what we want to do is we just want to save this JSON value in database. And when you are looking (9:34) at history, we just pull that JSON and reload it. So, when I have to reload it, I need the data (9:40) also to reload.
So, and we are not storing data in memory. Okay. (9:48) Somehow we need to link that.
So, one way to do it is if you convert this into an HTML page, (9:52) right? So, VegaConfig is an option to convert into a HTML page. (9:56) Yes. So, if you convert into a HTML page, (9:58) it will store versus the data also.
Okay. (10:04) That link we need to see like how do we bring it up again if someone wants to look at the history, (10:09) they should be able to do it. Okay.
So, as of now, what I did is like (10:15) we created a HTML, but it is only on sample data and it is not refreshable thing. We do not get (10:22) whatever we pass, we got it. Right.
(10:23) But once I think, yeah, we connect to the DB and in that way, if I work, I think it will be done. (10:33) Right, exactly. Right.
For now, just do this. Since you already have the configurations working (10:38) for you, LLM Paul is working for you. Yeah.
(10:40) So, only thing is you need to replace the sample data with actual data, right? (10:44) So, just take a question, one of our, any of the sentiment questions that we have, right? (10:48) Ask the question, you will get some 20, 30 records. Instead of passing all those 20, (10:53) 30 records, just pass five records to the LLM and ask it to come up with the configuration. (10:58) And once the configuration comes in, try to replace those five records with the actual 20 (11:02) records and then visualize on screen, right? If that pipeline is ready, I think we're good (11:07) for this week's release.
Oh, okay. Got it. (11:11) Okay.
Yeah. (11:12) So, we will go to this, talk to data and we will check any kind of question. It will fetch the (11:22) data.
From that data, I can use it for configuration and I can implement in the (11:26) same way, right? If I want the data. Right, right, yes. (11:31) Okay, Akhilesh.
I will look that, Akhilesh, on this. (11:36) Okay, okay, yeah. I will let you know on this.
(11:39) I think this is good. The configuration of islanding that you've written, right? I think (11:43) that's pretty detailed and it's good to use. So, we'll go with that.
We'll just stick to that. We (11:50) won't make any changes there. Okay, okay, Akhilesh.
(11:52) You know, the data component, if you fix it, I think we're good. (11:56) Okay, Akhilesh. I will look at that.
(11:59) If you have any sample questions, can you share it to me, Akhilesh? Like I will also- (12:03) Sample questions? Yeah, I'll give you the sample questions. (12:06) Yeah. (12:12) So, this, are we going to move it to VAT by any time, is there, Akhilesh, like for this? (12:19) Is it like a little urgent for Vedam's team also? But I think he's depending on this, I think, (12:24) right? Which one? (12:27) This one, this implementation, whatever HTML pages we have to set it up.
So, Vedam's UI (12:32) team is also depending, right? Oh, yeah, UI team, I mean, they're (12:38) almost, they kind of made the changes for this as well, like, you know, based on doctor report, (12:44) right? They made changes for this also, but we'll still have to do a couple of rounds of (12:50) testing to make sure it's actually working. So, that's why, like, if we have this tomorrow, (12:56) like, say, for instance, if we have this tomorrow, then UI can take one day. I don't think maybe more (13:00) than a day.
Okay. (13:01) So, if they can do it on Thursday, we'll push it on to Dev on Friday or something. (13:05) Oh, okay.
