DELETE FROM ${STGDB}.calpp_dla;
.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

LOCK ${STGDB}.hyp_price_plan_xref FOR ACCESS
INSERT INTO ${STGDB}.calpp_dla
SELECT  dla.sor_id
       , dla.cust_id
       , dla.cust_line_seq_id
       , dla.activity_dt
       , dla.activity_cd
       , Coalesce ( a.pplan_cd,dla.pplan_cd_curr )
       , Coalesce ( a.pplan_mkt_cd,dla.pplan_mkt_cd_curr )
       , a.pplan_line_acct_cd
       , a.svc_id
       , a.svc_exp_dt
       , pp.plan_data_allow
  FROM ${UDMITVMDB}.dly_line_activity dla

  LEFT JOIN ${UDMITVMDB}.cust_acct_line_pplan_hist a
    ON dla.sor_id = a.sor_id
   AND dla.cust_id = a.cust_id
   AND dla.cust_line_seq_id = a.cust_line_seq_id
   AND dla.activity_dt + 1 BETWEEN a.eff_dt AND a.exp_dt
   AND a.pplan_cd <> '99999'

  LEFT JOIN ${STGDB}.hyp_price_plan_xref pp
    ON dla.sor_id = pp.sor_id
   AND Coalesce ( a.pplan_cd,dla.pplan_cd_curr ) = pp.pplan_cd
   AND Coalesce ( a.pplan_mkt_cd,dla.pplan_mkt_cd_curr ) = pp.pplan_mkt_cd

 WHERE dla.activity_dt BETWEEN ${BDATE} AND ${EDATE}
   AND dla.activity_cd IN ( 'AC','RE' )
   --AND ( dla.churn_ind = 'Y' OR ( pp.ctgry_cd IN ( '28','40','42','43' ) OR dla.line_type_cd = 'T' ) )
   AND dla.churn_ind = 'Y' --modified for AI-67129
QUALIFY CSum ( 1,dla.sor_id,dla.cust_id,dla.cust_line_seq_id,dla.activity_dt,dla.activity_cd
               ,( Coalesce ( a.pplan_exp_dt,( '99991231' ( DATE,FORMAT 'YYYYMMDD' ) ) ) ) DESC
               ,a.pplan_eff_dt DESC,a.trans_dt DESC,a.last_upd_dt DESC ) = 1
 GROUP BY dla.sor_id , dla.cust_id , dla.cust_line_seq_id , dla.activity_dt , dla.activity_cd;

.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

COLLECT STATS ${STGDB}.calpp_dla INDEX(cust_id, cust_line_seq_id);
COLLECT STATS ${STGDB}.calpp_dla COLUMN sor_id;
COLLECT STATS ${STGDB}.calpp_dla COLUMN cust_id;
COLLECT STATS ${STGDB}.calpp_dla COLUMN svc_id;
COLLECT STATS ${STGDB}.calpp_dla COLUMN (ACTIVITY_CD ,ACTIVITY_DT);
COLLECT STATS ${STGDB}.calpp_dla COLUMN ACTIVITY_DT;
COLLECT STATS ${STGDB}.calpp_dla COLUMN ACTIVITY_CD;
COLLECT STATS ${STGDB}.calpp_dla COLUMN (SOR_ID ,CUST_ID ,CUST_LINE_SEQ_ID);
COLLECT STATS ${STGDB}.calpp_dla COLUMN (SOR_ID ,SVC_ID);
COLLECT STATS ${STGDB}.calpp_dla COLUMN (PPLAN_CD ,PPLAN_MKT_CD);
COLLECT STATS ${STGDB}.calpp_dla COLUMN PPLAN_CD;

/***********************************************/
/****** CUST_ACCT_LINE_PPLAN DLA-DE   **********/
/***********************************************/

DELETE FROM ${STGDB}.calpp_dla_de;
.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

LOCK ${STGDB}.hyp_price_plan_xref FOR ACCESS
INSERT INTO ${STGDB}.calpp_dla_de
SELECT  dla.sor_id
       , dla.cust_id
       , dla.cust_line_seq_id
       , dla.activity_dt
       , dla.activity_cd
       , Coalesce ( a.pplan_cd,dla.pplan_cd_curr )
       , Coalesce ( a.pplan_mkt_cd,dla.pplan_mkt_cd_curr )
       , a.pplan_line_acct_cd
       , a.svc_id
       , a.svc_exp_dt
       , pp.plan_data_allow
  FROM ${UDMITVMDB}.dly_line_activity dla

  LEFT JOIN ${UDMITVMDB}.cust_acct_line_pplan_hist a
    ON dla.sor_id = a.sor_id
   AND dla.cust_id = a.cust_id
   AND dla.cust_line_seq_id = a.cust_line_seq_id
   AND dla.activity_dt BETWEEN a.eff_dt
   AND a.exp_dt
   AND a.pplan_cd<>'99999'

  LEFT JOIN ${STGDB}.hyp_price_plan_xref pp
    ON dla.sor_id = pp.sor_id
   AND Coalesce ( a.pplan_cd,dla.pplan_cd_curr ) = pp.pplan_cd
   AND Coalesce ( a.pplan_mkt_cd,dla.pplan_mkt_cd_curr ) = pp.pplan_mkt_cd

 WHERE dla.activity_dt BETWEEN ${BDATE} AND ${EDATE}
   AND dla.activity_cd IN ( 'DE','D3','D6' )
   --AND ( dla.churn_ind = 'y' OR ( pp.ctgry_cd IN ( '28','40','42','43' ) OR dla.line_type_cd = 'T' ) )
   AND dla.churn_ind = 'y' --modified for AI-67129
QUALIFY CSum ( 1,dla.sor_id,dla.cust_id,dla.cust_line_seq_id,dla.activity_dt,dla.activity_cd
                ,( Coalesce ( a.pplan_exp_dt,( '99991231' ( DATE,FORMAT 'YYYYMMDD' ) ) ) ) DESC
                ,a.pplan_eff_dt DESC,a.trans_dt DESC,a.last_upd_dt DESC ) = 1
 GROUP BY dla.sor_id , dla.cust_id , dla.cust_line_seq_id , dla.activity_dt , dla.activity_cd;

.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

collect stats ${STGDB}.calpp_dla_de index(cust_id, cust_line_seq_id);
collect stats ${STGDB}.calpp_dla_de column sor_id;
collect stats ${STGDB}.calpp_dla_de column cust_id;
collect stats ${STGDB}.calpp_dla_de column svc_id;
collect stats ${STGDB}.calpp_dla_de column (ACTIVITY_CD ,ACTIVITY_DT);
collect stats ${STGDB}.calpp_dla_de column ACTIVITY_DT;
collect stats ${STGDB}.calpp_dla_de column ACTIVITY_CD;
collect stats ${STGDB}.calpp_dla_de column (SOR_ID ,CUST_ID ,CUST_LINE_SEQ_ID);
collect stats ${STGDB}.calpp_dla_de column (SOR_ID ,SVC_ID);
collect stats ${STGDB}.calpp_dla_de column (PPLAN_CD ,PPLAN_MKT_CD);
collect stats ${STGDB}.calpp_dla_de column PPLAN_CD;


/******************************************/
/***        DLA ACTS     ******************/
/******************************************/

DEL FROM ${STGDB}.dla_sum_fact_stg;
.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

LOCK ${STGDB}.hyp_price_plan_xref FOR ACCESS
INSERT INTO ${STGDB}.dla_sum_fact_stg
SELECT  (${BDATE}( DATE ) ) AS rpt_mth
       , Trim ( Both FROM Extract ( YEAR FROM (${BDATE}( DATE ) ) ) ) AS rpt_year
       , dla.sor_id
       , dla.cust_id
       , dla.cust_line_seq_id
       , dla.activity_cd
       , Coalesce ( dla.mtn,' ' )
       , Coalesce ( dla.acct_num,' ' )
       , Coalesce ( b.cust_type_cd,' ' )
       , CASE
              WHEN dla.activity_dt = DATE-1
              THEN Coalesce ( bb.rev_gen_ind,b.rev_gen_ind,' ' )
              ELSE Coalesce ( b.rev_gen_ind,bb.rev_gen_ind,' ' )
          END
       , Coalesce ( dla.area_cd,b.area_cd,bb.area_cd,' ' )
       , CASE
              WHEN dla.activity_dt = DATE-1
              THEN Coalesce ( bb.prepaid_ind,b.prepaid_ind,'N' )
              ELSE Coalesce ( b.prepaid_ind,bb.prepaid_ind,'N' )
          END AS prepaid_ind 
       , CASE
              WHEN Coalesce ( b.prepaid_ind,bb.prepaid_ind ) = 'Y'
              THEN 'Prepaid'
              WHEN Coalesce ( b.line_type_cd,bb.line_type_cd ) = 'H'
              THEN 'HUB-Postpaid'
              ELSE 'All Other-Postpaid'
          END AS payment_type
       , 'All Other' AS revenue_type
       , CASE
              WHEN Coalesce ( b.prepaid_ind,bb.prepaid_ind ) = 'Y'
              THEN 'No Contract'
              WHEN Coalesce ( b.cntrct_term_id,bb.cntrct_term_id ) = '48'
              THEN 'MTM Contract'
              WHEN Coalesce ( b.cntrct_term_id,bb.cntrct_term_id ) = '20'
                  AND ppc.pplan_cd IS NOT NULL AND ( ( Coalesce ( b.line_act_dt,bb.line_act_dt )>=1080921
                  AND Coalesce ( b.eqp_status_cd,bb.eqp_status_cd ) IN ( 'ow','pu' ) )
                  OR ( Coalesce ( b.esn_change_dt,bb.esn_change_dt )>=1080921
                  AND Coalesce ( b.esn_change_reas_cd,bb.esn_change_reas_cd ) IN ( 'un','ce' ) ) )
                  AND Coalesce ( b.line_type_cd,bb.line_type_cd,'Z' )<>'T'
              THEN 'MTM Contract' -- mth-to mth customers
			  WHEN CALC.CNTRCT_TERM_ID =56 THEN TRM.CNTRCT_TERMS_DESC   -- ADDED_NEW_LINE -- 04072023
              WHEN Coalesce ( b.prepaid_ind,bb.prepaid_ind ) = 'Y'
              THEN 'No Contract'
              WHEN Coalesce ( b.cntrct_end_dt,bb.cntrct_end_dt )>dla.activity_dt
                  AND Coalesce ( b.cntrct_prd_mth,bb.cntrct_prd_mth ) = 12
              THEN '1 Yr Contract'
              WHEN Coalesce ( b.cntrct_end_dt,bb.cntrct_end_dt )>dla.activity_dt
                  AND Coalesce ( b.cntrct_prd_mth,bb.cntrct_prd_mth ) = 24
              THEN '2 Yr Contract'
              WHEN Coalesce ( b.cntrct_end_dt,bb.cntrct_end_dt )>dla.activity_dt
              THEN 'Other Contract'
              ELSE 'Out of Contract'
          END AS in_contract_term 
       , Coalesce ( pp.hyp_pplan,'Unknown Price Plan' ) AS promo_type 
       , 'NULL' AS access_tier2 
       , 'NULL' AS voice_pplan_access_tier2
       , 'No ARPU Tier' AS arpu_tier 
       , 'NULL' AS data_access_tier
       , CASE
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
                  AND frst.cust_id IS NOT NULL
              THEN ( ZeroIfNull ( pp.access_amt )+ZeroIfNull ( svc.svc_amt ) )
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
                  AND frst.cust_id IS NULL
              THEN ZeroIfNull ( svc.svc_amt )
              ELSE pp.access_amt
          END AS access_amt
       , CASE
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
                  AND frst.cust_id IS NOT NULL
              THEN ( ZeroIfNull ( pp.voice_access_amt )+ZeroIfNull ( svc.svc_amt ) )
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
                  AND frst.cust_id IS NULL
              THEN ZeroIfNull ( svc.svc_amt )
              ELSE ZeroIfNull ( pp.voice_access_amt )
          END AS voice_access_amt
       , CASE
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
                  AND frst.cust_id IS NOT NULL
              THEN ZeroIfNull ( pp.data_access_amt )+ZeroIfNull ( dat.data_access_amt )
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
                  AND frst.cust_id IS NULL
              THEN ZeroIfNull ( dat.data_access_amt )
              ELSE ZeroIfNull ( CASE
                  WHEN pp.access_amt > 0 AND pp.voice_access_amt = 0
                      AND Coalesce ( dat.data_access_amt,0 ) = 0
                  THEN pp.access_amt
                  ELSE dat.data_access_amt
              END )
          END AS data_access_amt
       , Coalesce ( dla.sls_dist_chnl_type_cd,'UNK' ) AS channel_type 
       , Coalesce ( dla.mkt_cd,'000' ) AS mkt_cd 
       , CASE
              WHEN dla.activity_dt-Coalesce ( b.line_act_dt,bb.line_act_dt )<365
              THEN 'Up to 1 Year'
              WHEN dla.activity_dt-Coalesce ( b.line_act_dt,bb.line_act_dt ) BETWEEN 366 AND 730
              THEN '1 YR to 2 YR'
              WHEN dla.activity_dt-Coalesce ( b.line_act_dt,bb.line_act_dt ) BETWEEN 731 AND 1095
              THEN '2 YR to 3 YR'
              ELSE '3 YR+'
          END AS tenure 
       , CASE
              WHEN dla.activity_dt = DATE-1
              THEN Coalesce ( bb.prod_nm,b.prod_nm,'UNKNOWN 3G DEVICE' )
              ELSE Coalesce ( b.prod_nm,bb.prod_nm,'UNKNOWN 3G DEVICE' )
          END AS prod_nm 
       , Coalesce ( pp_dla.pplan_cd,dla.pplan_cd_curr,'UNTG' ) AS pplan_cd 
       , Coalesce ( pp_dla.pplan_mkt_cd,dla.pplan_mkt_cd_curr,'UNTG' ) AS pplan_mkt_cd 
       , Coalesce ( o.master_agent_id,'No Value' ) AS master_agent_id 
       , Coalesce ( seg.hrchy_segmt,seg2.hrchy_segmt,'UNTG' ) AS hrchy_segmtt 
       , Coalesce ( seg.life_stage_segmt,'UNTG' ) AS life_stage_segmt
       , Coalesce ( seg.ethnicity_segmt,'UNTG' ) AS ethnicity_segmt
       , Coalesce ( seg.rollup_cd,'UNTG' ) AS rollup_cd
       , Coalesce ( seg.mnc_ind,'UNTG' ) AS mnc_ind
       , Coalesce ( seg.f1k_ind,'UNTG' ) AS f1k_ind
       , Coalesce ( seg.vzw_value,'UNTG' ) AS vzw_value
       , Coalesce ( seg.lang_pref_ind,'UNTG' ) AS lang_pref_ind
       , Coalesce ( seg.birth_year,0 ) AS birth_year
       , Coalesce ( brk.breakage_ind,'N' ) AS breakage_ind
       , Coalesce ( cadh.rltd_acct_id,ca.rltd_acct_id,'UNTG' ) AS rltd_acct_id
       , Coalesce ( cadh.duns_loc_num,ca.duns_loc_num,'UNTG' ) AS duns_loc_num
       , Coalesce ( ecpd.ecpd_profile_id,'UNTG' ) AS ecpd_profile_id
       , Coalesce ( dla.sls_outlet_id,'UNTG' ) AS sls_outlet_id
       , CASE
              WHEN cadh.vertical IS NOT NULL
              THEN cadh.vertical
              WHEN cadh.vertical IS NULL AND cadh.cust_type_cd IN ( 'FA','FT','FM','FS','GV','FX','US' )
              THEN 'Government'
              WHEN cadh.vertical IS NULL AND hrchy_segmtt = 'CO Consumer'
              THEN 'Consumer'
              ELSE 'Unclassified'
          END AS vertical
       , Coalesce ( dla.port_status_cd,' ' )
       , Coalesce ( dla.port_carrier_cd,' ' )
       , Sum ( CASE
              WHEN dla.activity_cd = 'AC'
              THEN 1
              WHEN dla.activity_cd IN ( 'D3','D6' )
              THEN-1
              ELSE 0
          END ) AS gross_adds
       , Sum ( CASE
              WHEN dla.activity_cd = 'DE' AND Coalesce ( Trim ( c.change_reas_ctgry_cd ),' ' ) IN ( 'A','V',' ' )
              THEN 1
              WHEN dla.activity_cd = 'RE' AND Coalesce ( Trim ( c.change_reas_ctgry_cd ),' ' ) IN ( 'A','V',' ' )
              THEN-1
              ELSE 0
          END ) AS voluntary_disconnects
       , Sum ( CASE
              WHEN dla.activity_cd = 'DE' AND Coalesce ( Trim ( c.change_reas_ctgry_cd ),' ' ) NOT IN ( 'A','V',' ' )
              THEN 1
              WHEN dla.activity_cd = 'RE' AND Coalesce ( Trim ( c.change_reas_ctgry_cd ),' ' ) NOT IN ( 'A','V',' ' )
              THEN-1
              ELSE 0
          END ) AS involuntary_disconnects
       , Sum ( CASE
              WHEN dla.activity_cd = 'AC'
              THEN 1
              ELSE 0
          END ) AS act_cnt 
       , Sum ( CASE
              WHEN dla.activity_cd = 'DE'
              THEN 1
              ELSE 0
          END ) AS deact_de_cnt 
       , Sum ( CASE
              WHEN dla.activity_cd = 'D3'
              THEN 1
              ELSE 0
          END ) AS deact_d3_cnt 
       , Sum ( CASE
              WHEN dla.activity_cd = 'D6'
              THEN 1
              ELSE 0
          END ) AS deact_d6_cnt 
       , Sum ( CASE
              WHEN dla.activity_cd = 'RE'
              THEN 1
              ELSE 0
          END ) AS react_cnt 
       , Coalesce ( b.orig_sor_id,bb.orig_sor_id )
       , o.master_agent_area_cd
       , dla.activity_dt
       , dla.sls_prsn_id
       , CASE
              WHEN dla.activity_dt = DATE-1
              THEN Coalesce ( bb.vsn_cust_type_cd,b.vsn_cust_type_cd )
              ELSE Coalesce ( b.vsn_cust_type_cd,bb.vsn_cust_type_cd )
          END
       , 0
       , CASE
              WHEN dla.activity_dt = DATE-1
              THEN ( CASE
                  WHEN Coalesce ( bb.device_type_cd,b.device_type_cd ) LIKE '4G%'
                    OR Coalesce ( bb.device_type_cd,b.device_type_cd ) LIKE 'IP%'
                  THEN Coalesce ( bb.device_prod_nm,b.device_prod_nm,'UNKNOWN 4G DEVICE' )
                  WHEN Coalesce ( bb.device_type_cd,b.device_type_cd ) LIKE '5G%'
                  THEN Coalesce ( bb.device_prod_nm,b.device_prod_nm,'UNKNOWN 5G DEVICE' )
                  ELSE NULL
              END )
              ELSE ( CASE
                  WHEN Coalesce ( b.device_type_cd,bb.device_type_cd ) LIKE '4G%'
                    OR Coalesce ( b.device_type_cd,bb.device_type_cd ) LIKE 'IP%'
                  THEN Coalesce ( b.device_prod_nm,bb.device_prod_nm,'UNKNOWN 4G DEVICE' )
                  WHEN Coalesce ( b.device_type_cd,bb.device_type_cd ) LIKE '5G%'
                  THEN Coalesce ( b.device_prod_nm,bb.device_prod_nm,'UNKNOWN 5G DEVICE' )
                  ELSE NULL
              END )
          END
       , CASE
              WHEN dla.activity_dt = DATE-1
              THEN Coalesce ( bb.device_type_cd,b.device_type_cd,'VZW' )
              ELSE Coalesce ( b.device_type_cd,bb.device_type_cd,'VZW' )
          END
       , CASE
              WHEN dla.activity_dt = DATE-1
              THEN Coalesce ( bb.esn_num,dla.esn_num,b.esn_num )
              ELSE Coalesce ( b.esn_num,bb.esn_num,dla.esn_num )
          END
       , CASE
              WHEN dla.activity_dt = DATE-1
              THEN Coalesce ( bb.prod_nm,b.prod_nm,'UNKNOWN 3G DEVICE' )
              ELSE Coalesce ( b.prod_nm,bb.prod_nm,'UNKNOWN 3G DEVICE' )
          END
       , CASE
              WHEN pp.ctgry_cd IN ( '28','40','42','43' )
              THEN 'T'
              ELSE dla.line_type_cd
          END AS new_line_type_cd
       , Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd )
       , CASE
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
              THEN pp.access_amt
              ELSE 0
          END AS acct_access_amt
       , CASE
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
              THEN ZeroIfNull ( pp.voice_access_amt )
              ELSE 0
          END AS acct_voice_access_amt
       , CASE
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
              THEN ZeroIfNull ( pp.data_access_amt )
              ELSE 0
          END AS acct_data_access_amt
       , dla.user_id
       , dla.change_reas_cd
       , pp.hyp_pplan
       , pp.pplan_share
       , pp.pplan_group
       , bb.eqp_prod_nm
       , m.area_desc
       , m.region_cd
       , m.region_desc
       , m.sub_region_cd
       , m.managed_ind
       , NULL
       , NULL
       , NULL
       , NULL
       , NULL
       , s.score_decile
       , 'N'
       , CASE
              WHEN Coalesce ( b.prepaid_ind,bb.prepaid_ind ) = 'Y'
              THEN 'No Contract'
              WHEN Coalesce ( b.cntrct_term_id,bb.cntrct_term_id ) = '48'
              THEN 'MTM Contract'
              WHEN Coalesce ( b.cntrct_term_id,bb.cntrct_term_id ) = '20'
                  AND ppc.pplan_cd IS NOT NULL AND ( ( Coalesce ( b.line_act_dt,bb.line_act_dt )>=1080921
                  AND Coalesce ( b.eqp_status_cd,bb.eqp_status_cd ) IN ( 'ow','pu' ) )
                  OR ( Coalesce ( b.esn_change_dt,bb.esn_change_dt )>=1080921
                  AND Coalesce ( b.esn_change_reas_cd,bb.esn_change_reas_cd ) IN ( 'un','ce' ) ) )
                  AND Coalesce ( b.line_type_cd,bb.line_type_cd,'Z' )<>'T'
              THEN 'MTM Contract' -- mth-to mth customers
			  WHEN CALC.CNTRCT_TERM_ID =56 THEN TRM.CNTRCT_TERMS_DESC   -- ADDED_NEW_LINE -- 04072023
              WHEN Coalesce ( b.prepaid_ind,bb.prepaid_ind ) = 'Y'
              THEN 'No Contract'
              WHEN Coalesce ( b.cntrct_end_dt,bb.cntrct_end_dt )>dla.activity_dt
                  AND Coalesce ( b.cntrct_prd_mth,bb.cntrct_prd_mth ) = 12
              THEN '1 Yr Contract'
              WHEN Coalesce ( b.cntrct_end_dt,bb.cntrct_end_dt )>dla.activity_dt
                  AND Coalesce ( b.cntrct_prd_mth,bb.cntrct_prd_mth ) = 24
              THEN '2 Yr Contract'
              WHEN Coalesce ( b.cntrct_end_dt,bb.cntrct_end_dt )>dla.activity_dt
              THEN 'Other Contract'
              ELSE 'Out of Contract'
          END AS curr_contract_term 
       , CASE
              WHEN Coalesce ( b.device_type_cd,bb.device_type_cd ) LIKE 'IP%'
              THEN Coalesce ( b.esn_num,bb.esn_num,dla.esn_num )
              ELSE b.eqp_device_id
          END
       , 'N'
       , NULL
       , Coalesce ( pp.plan_data_allow,'No Data' )
       , NULL
       , 'NONE'
       , CASE
              WHEN Coalesce ( b.prepaid_ind,bb.prepaid_ind,'N' ) = 'Y'
              THEN ( Coalesce ( pp.rpt_pplan_cd,'ST.PRE.UNK.DMY' ) )
              ELSE ( Coalesce ( pp.rpt_pplan_cd,'ST.POST.UNK.DMY' ) )
          END
       , DATE
       , DATE
       , gift_data_allow
       , boost_data_allow
       , carryover_data_allow
  FROM ${UDMITVMDB}.dly_line_activity dla

  LEFT JOIN ${UDMITVMDB}.cust_acct_line_dly_hist b
    ON dla.sor_id = b.sor_id
   AND dla.cust_id = b.cust_id
   AND dla.cust_line_seq_id = b.cust_line_seq_id
   AND dla.activity_dt+1 BETWEEN b.eff_dt   AND b.exp_dt

  LEFT JOIN ${STGDB}.caldh_eom bb
    ON dla.sor_id = bb.sor_id
   AND dla.cust_id = bb.cust_id
   AND dla.cust_line_seq_id = bb.cust_line_seq_id


  LEFT JOIN ${STGDB}.calpp_dla pp_dla
    ON dla.sor_id = pp_dla.sor_id
   AND dla.cust_id = pp_dla.cust_id
   AND dla.cust_line_seq_id = pp_dla.cust_line_seq_id
   AND dla.activity_dt = pp_dla.activity_dt
   AND dla.activity_cd = pp_dla.activity_cd

  LEFT JOIN ${STGDB}.caldh_eom_first frst
    ON dla.sor_id = frst.sor_id
   AND dla.cust_id = frst.cust_id
   AND dla.cust_line_seq_id = frst.cust_line_seq_id

  LEFT JOIN ${STGDB}.caldh_eom_vertical cadh
    ON dla.sor_id = cadh.sor_id
   AND dla.cust_id = cadh.cust_id
   AND dla.cust_line_seq_id = cadh.cust_line_seq_id

  LEFT JOIN ${STGDB}.data_access_tier dat
    ON dla.sor_id = dat.sor_id
   AND dla.cust_id = dat.cust_id
   AND dla.cust_line_seq_id = dat.cust_line_seq_id

  LEFT JOIN ${STGDB}.cust_ecpd_tmp ecpd
    ON dla.sor_id = ecpd.sor_id
   AND dla.cust_id = ecpd.cust_id
   AND dla.cust_line_seq_id = ecpd.cust_line_seq_id

  LEFT JOIN ${STGDB}.hyp_breakage brk
    ON dla.sor_id = brk.sor_id
   AND dla.cust_id = brk.cust_id
   AND dla.cust_line_seq_id = brk.cust_line_seq_id

  LEFT JOIN ${STGDB}.new_fact_hyp_seg seg
    ON dla.sor_id = seg.sor_id
   AND dla.cust_id = seg.cust_id
   AND dla.cust_line_seq_id = seg.cust_line_seq_id

  LEFT JOIN ${STGDB}.new_fact_hyp_seg_earliest seg2
    ON dla.sor_id = seg2.sor_id
   AND dla.cust_id = seg2.cust_id
   AND dla.cust_line_seq_id = seg2.cust_line_seq_id

  LEFT JOIN ${UDMITVMDB}.change_reason c
    ON dla.sor_id = c.sor_id
   AND dla.change_reas_cd = c.change_reas_cd
   AND c.sor_id IN ( 'V','E' )

  LEFT JOIN ${STGDB}.hyp_price_plan_xref pp
    ON Coalesce ( pp_dla.sor_id,dla.sor_id ) = pp.sor_id
   AND Coalesce ( pp_dla.pplan_cd,dla.pplan_cd_curr ) = pp.pplan_cd
   AND Coalesce ( pp_dla.pplan_mkt_cd,dla.pplan_mkt_cd_curr ) = pp.pplan_mkt_cd

  LEFT JOIN ${STGDB}.pplan_contract ppc
    ON Coalesce ( pp_dla.pplan_cd,dla.pplan_cd_curr ) = ppc.pplan_cd

  LEFT JOIN ${UDMITVMDB}.outlet o
    ON dla.sor_id = o.sor_id
   AND dla.sls_outlet_id = o.sls_outlet_id
   AND o.sor_id IN ( 'V','E' )
   AND o.master_agent_id IS NOT NULL

  LEFT JOIN ${UDMITVMDB}.service svc
    ON pp_dla.sor_id = svc.sor_id
   AND pp_dla.svc_id = svc.svc_id

  LEFT JOIN ${UDMITVMDB}.market m
    ON dla.sor_id = m.sor_id
   AND Coalesce ( dla.mkt_cd,'000' ) = m.mkt_cd

  LEFT JOIN ${STGDB}.score_decile_xref s
    ON dla.sor_id = s.sor_id
   AND dla.cust_id = s.cust_id
   AND dla.cust_line_seq_id = s.cust_line_seq_id

  LEFT JOIN ${STGDB}.ssfdsf_data_allow_stg dab
    ON dla.sor_id = dab.sor_id
   AND dla.cust_id = dab.cust_id
   AND dla.acct_num = dab.acct_num

 LEFT JOIN ${UDMITVMDB}.cust_acct ca
  on dla.sor_id=ca.sor_id
  and dla.cust_id=ca.cust_id
  and dla.acct_num=ca.acct_num

-- ADDED_NEW_LINE -- 04072023

LEFT OUTER JOIN ${UDMITVMDB}.CUST_ACCT_LINE_CNTRCT CALC
ON CALC.CUST_ID = dla.CUST_ID
AND CALC.CUST_LINE_SEQ_ID = dla.CUST_LINE_SEQ_ID
LEFT OUTER JOIN NTL_${BOX}_ALLVM.CONTRACT_TERM_V TRM 
ON TRM.CNTRCT_TERMS_CD = CALC.CNTRCT_TERM_ID

-- ADDED_NEW_LINE -- 04072023

 WHERE dla.activity_dt BETWEEN ${BDATE} AND ${EDATE}
   AND dla.activity_cd IN ( 'AC','RE' )
   AND Coalesce ( pp.ctgry_cd,' ' )<>'26'
   --AND ( dla.churn_ind = 'Y' OR new_line_type_cd = 'T' )
   AND dla.churn_ind = 'Y' --modified for AI-67129
   AND NOT (Coalesce(b.ln_id_type,bb.ln_id_type,' ') = 'PMD' AND dla.churn_ind = 'N')
 GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30
           ,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,56,57,58,59,60,61,62,63,64
           ,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90
           ,91,92,93,94,95,96,97,98,99,100,101;

.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

DELETE FROM ${STGDB}.DLA_SUM_FACT_STG_DE;
.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

/******************************************/
/***        DLA DEACTS   ******************/
/******************************************/

LOCK ${STGDB}.hyp_price_plan_xref FOR ACCESS 
LOCK ${STGDB}.caldh_eom FOR ACCESS
INSERT INTO ${STGDB}.dla_sum_fact_stg_de
SELECT  (${BDATE}( DATE ) ) AS rpt_mth
       , Trim ( Both FROM Extract ( YEAR FROM (${BDATE}( DATE ) ) ) ) AS rpt_year
       , dla.sor_id
       , dla.cust_id
       , dla.cust_line_seq_id
       , dla.activity_cd
       , Coalesce ( dla.mtn,' ' )
       , Coalesce ( dla.acct_num,' ' )
       , Coalesce ( b.cust_type_cd,' ' )
       , Coalesce ( b.rev_gen_ind,bb.rev_gen_ind,' ' )
       , Coalesce ( dla.area_cd,b.area_cd,bb.area_cd,' ' )
       , Coalesce ( b.prepaid_ind,bb.prepaid_ind,'N' ) AS prepaid_ind
       , CASE
              WHEN Coalesce ( b.prepaid_ind,bb.prepaid_ind ) = 'Y'
              THEN 'Prepaid'
              WHEN Coalesce ( b.line_type_cd,bb.line_type_cd ) = 'H'
              THEN 'HUB-Postpaid'
              ELSE 'All Other-Postpaid'
          END AS payment_type
       , 'All Other' AS revenue_type
       , CASE
              WHEN Coalesce ( b.prepaid_ind,bb.prepaid_ind ) = 'Y'
              THEN 'No Contract'
              WHEN Coalesce ( b.cntrct_term_id,bb.cntrct_term_id ) = '48'
              THEN 'MTM Contract'
              WHEN Coalesce ( b.cntrct_term_id,bb.cntrct_term_id ) = '20'
                AND ppc.pplan_cd IS NOT NULL AND ( ( Coalesce ( b.line_act_dt,bb.line_act_dt )>=1080921
                AND Coalesce ( b.eqp_status_cd,bb.eqp_status_cd ) IN ( 'ow','pu' ) )
                OR ( Coalesce ( b.esn_change_dt,bb.esn_change_dt )>=1080921
                AND Coalesce ( b.esn_change_reas_cd,bb.esn_change_reas_cd ) IN ( 'un','ce' ) ) )
                AND Coalesce ( b.line_type_cd,bb.line_type_cd,'Z' )<>'T'
              THEN 'MTM Contract' --  mth-to mth customers
			  WHEN CALC.CNTRCT_TERM_ID =56 THEN TRM.CNTRCT_TERMS_DESC   -- ADDED_NEW_LINE -- 04072023
              WHEN Coalesce ( b.prepaid_ind,bb.prepaid_ind ) = 'Y'
              THEN 'No Contract'
              WHEN Coalesce ( b.cntrct_end_dt,bb.cntrct_end_dt )>dla.activity_dt
                AND Coalesce ( b.cntrct_prd_mth,bb.cntrct_prd_mth ) = 12
              THEN '1 Yr Contract'
              WHEN Coalesce ( b.cntrct_end_dt,bb.cntrct_end_dt )>dla.activity_dt
                AND Coalesce ( b.cntrct_prd_mth,bb.cntrct_prd_mth ) = 24
              THEN '2 Yr Contract'
              WHEN Coalesce ( b.cntrct_end_dt,bb.cntrct_end_dt )>dla.activity_dt
              THEN 'Other Contract'
              ELSE 'Out of Contract'
          END AS in_contract_term 
       , Coalesce ( pp.hyp_pplan,'Unknown Price Plan' ) AS promo_type 
       , 'NULL' AS access_tier2 
       , 'NULL' AS voice_pplan_access_tier2
       , 'No ARPU Tier' AS arpu_tier 
       , 'NULL' AS data_access_tier
       , CASE
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
                AND frst.cust_id IS NOT NULL
              THEN ( ZeroIfNull ( pp.access_amt )+ZeroIfNull ( svc.svc_amt ) )
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
                AND frst.cust_id IS NULL
              THEN ZeroIfNull ( svc.svc_amt )
              ELSE pp.access_amt
          END AS access_amt
       , CASE
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
                AND frst.cust_id IS NOT NULL
              THEN ( ZeroIfNull ( pp.voice_access_amt )+ZeroIfNull ( svc.svc_amt ) )
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
                AND frst.cust_id IS NULL
              THEN ZeroIfNull ( svc.svc_amt )
              ELSE ZeroIfNull ( pp.voice_access_amt )
          END AS voice_access_amt
       , CASE
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
                AND frst.cust_id IS NOT NULL
              THEN ZeroIfNull ( pp.data_access_amt )+ZeroIfNull ( dat.data_access_amt )
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
                AND frst.cust_id IS NULL
              THEN ZeroIfNull ( dat.data_access_amt )
              ELSE ZeroIfNull ( CASE
                  WHEN pp.access_amt > 0 AND pp.voice_access_amt = 0 AND Coalesce ( dat.data_access_amt,0 ) = 0
                  THEN pp.access_amt
                  ELSE dat.data_access_amt
              END )
          END AS data_access_amt
       , Coalesce ( dla.sls_dist_chnl_type_cd,'UNK' ) AS channel_type 
       , Coalesce ( dla.mkt_cd,'000' ) AS mkt_cd 
       , CASE
              WHEN dla.activity_dt-Coalesce ( b.line_act_dt,bb.line_act_dt )<365
              THEN 'Up to 1 Year'
              WHEN dla.activity_dt-Coalesce ( b.line_act_dt,bb.line_act_dt ) BETWEEN 366 AND 730
              THEN '1 YR to 2 YR'
              WHEN dla.activity_dt-Coalesce ( b.line_act_dt,bb.line_act_dt ) BETWEEN 731 AND 1095
              THEN '2 YR to 3 YR'
              ELSE '3 YR+'
          END AS tenure 
       , Coalesce ( b.prod_nm,bb.prod_nm,'UNKNOWN 3G DEVICE' ) AS prod_nm 
       , Coalesce ( pp_dla.pplan_cd,dla.pplan_cd_curr,'UNTG' ) AS pplan_cd 
       , Coalesce ( pp_dla.pplan_mkt_cd,dla.pplan_mkt_cd_curr,'UNTG' ) AS pplan_mkt_cd 
       , Coalesce ( o.master_agent_id,'No Value' ) AS master_agent_id 
       , Coalesce ( seg.hrchy_segmt,seg2.hrchy_segmt,'UNTG' ) AS hrchy_segmtt 
       , Coalesce ( seg.life_stage_segmt,'UNTG' ) AS life_stage_segmt
       , Coalesce ( seg.ethnicity_segmt,'UNTG' ) AS ethnicity_segmt
       , Coalesce ( seg.rollup_cd,'UNTG' ) AS rollup_cd
       , Coalesce ( seg.mnc_ind,'UNTG' ) AS mnc_ind
       , Coalesce ( seg.f1k_ind,'UNTG' ) AS f1k_ind
       , Coalesce ( seg.vzw_value,'UNTG' ) AS vzw_value
       , Coalesce ( seg.lang_pref_ind,'UNTG' ) AS lang_pref_ind
       , Coalesce ( b.birth_year,bb.birth_year,0 ) AS birth_year
       , Coalesce ( brk.breakage_ind,'N' ) AS breakage_ind
       , 'UNTG' AS rltd_acct_id
       , 'UNTG' AS duns_loc_num
       , Coalesce ( ecpd.ecpd_profile_id,'UNTG' ) AS ecpd_profile_id
       , Coalesce ( dla.sls_outlet_id,'UNTG' ) AS sls_outlet_id
       , 'Unclassified' AS vertical
       , Coalesce ( dla.port_status_cd,' ' )
       , Coalesce ( dla.port_carrier_cd,' ' )
       , CASE
              WHEN dla.activity_cd = 'AC'
              THEN 1
              WHEN dla.activity_cd IN ( 'D3','D6' )
              THEN-1
              ELSE 0
          END AS gross_adds
       , CASE
              WHEN dla.activity_cd = 'DE' AND Coalesce ( Trim ( c.change_reas_ctgry_cd ),' ' ) IN ( 'A','V',' ' )
              THEN 1
              ELSE 0
          END AS voluntary_disconnects
       , CASE
              WHEN dla.activity_cd = 'DE' AND Coalesce ( Trim ( c.change_reas_ctgry_cd ),' ' ) NOT IN ( 'A','V',' ' )
              THEN 1
              ELSE 0
          END AS involuntary_disconnects
       , CASE
              WHEN dla.activity_cd = 'AC'
              THEN 1
              ELSE 0
          END AS act_cnt 
       , CASE
              WHEN dla.activity_cd = 'DE'
              THEN 1
              ELSE 0
          END AS deact_de_cnt 
       , CASE
              WHEN dla.activity_cd = 'D3'
              THEN 1
              ELSE 0
          END AS deact_d3_cnt 
       , CASE
              WHEN dla.activity_cd = 'D6'
              THEN 1
              ELSE 0
          END AS deact_d6_cnt 
       , CASE
              WHEN dla.activity_cd = 'RE'
              THEN 1
              ELSE 0
          END AS react_cnt 
       , Coalesce ( b.orig_sor_id,bb.orig_sor_id )
       , o.master_agent_area_cd
       , dla.activity_dt
       , dla.sls_prsn_id
       , Coalesce ( b.vsn_cust_type_cd,bb.vsn_cust_type_cd )
       , 0
       , CASE
              WHEN Coalesce ( b.device_type_cd,bb.device_type_cd ) LIKE '4G%'
                OR Coalesce ( b.device_type_cd,bb.device_type_cd ) LIKE 'IP%'
              THEN Coalesce ( b.device_prod_nm,bb.device_prod_nm,'UNKNOWN 4G DEVICE' )
              WHEN Coalesce ( b.device_type_cd,bb.device_type_cd ) LIKE '5G%'
              THEN Coalesce ( b.device_prod_nm,bb.device_prod_nm,'UNKNOWN 5G DEVICE' )
              ELSE NULL
          END
       , Coalesce ( b.device_type_cd,bb.device_type_cd,'VZW' )
       , Coalesce ( b.esn_num,bb.esn_num,dla.esn_num )
       , Coalesce ( b.prod_nm,bb.prod_nm,'UNKNOWN 3G DEVICE' )
       , CASE
              WHEN pp.ctgry_cd IN ( '28','40','42','43' )
              THEN 'T'
              ELSE dla.line_type_cd
          END AS new_line_type_cd
       , Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd )
       , CASE
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
              THEN pp.access_amt
              ELSE 0
          END AS acct_access_amt
       , CASE
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
              THEN ZeroIfNull ( pp.voice_access_amt )
              ELSE 0
          END AS acct_voice_access_amt
       , CASE
              WHEN Coalesce ( pp_dla.pplan_line_acct_cd,pp.pplan_line_acct_cd ) = 'A'
              THEN ZeroIfNull ( pp.data_access_amt )
              ELSE 0
          END AS acct_data_access_amt
       , dla.user_id
       , dla.change_reas_cd
       , pp.hyp_pplan
       , pp.pplan_share
       , pp.pplan_group
       , bb.eqp_prod_nm
       , m.area_desc
       , m.region_cd
       , m.region_desc
       , m.sub_region_cd
       , m.managed_ind
       , NULL
       , NULL
       , NULL
       , NULL
       , NULL
       , s.score_decile
       , 'N'
       , CASE
              WHEN Coalesce ( b.prepaid_ind,bb.prepaid_ind ) = 'Y'
              THEN 'No Contract'
              WHEN Coalesce ( b.cntrct_term_id,bb.cntrct_term_id ) = '48'
              THEN 'MTM Contract'
              WHEN Coalesce ( b.cntrct_term_id,bb.cntrct_term_id ) = '20'
                AND ppc.pplan_cd IS NOT NULL AND ( ( Coalesce ( b.line_act_dt,bb.line_act_dt )>=1080921
                AND Coalesce ( b.eqp_status_cd,bb.eqp_status_cd ) IN ( 'ow','pu' ) )
                OR ( Coalesce ( b.esn_change_dt,bb.esn_change_dt )>=1080921
                AND Coalesce ( b.esn_change_reas_cd,bb.esn_change_reas_cd ) IN ( 'un','ce' ) ) )
                AND Coalesce ( b.line_type_cd,bb.line_type_cd,'Z' )<>'T'
              THEN 'MTM Contract' --  mth-to mth customers
			  WHEN CALC.CNTRCT_TERM_ID =56 THEN TRM.CNTRCT_TERMS_DESC   -- ADDED_NEW_LINE -- 04072023
              WHEN Coalesce ( b.prepaid_ind,bb.prepaid_ind ) = 'Y'
              THEN 'No Contract'
              WHEN Coalesce ( b.cntrct_end_dt,bb.cntrct_end_dt )>dla.activity_dt
                AND Coalesce ( b.cntrct_prd_mth,bb.cntrct_prd_mth ) = 12
              THEN '1 Yr Contract'
              WHEN Coalesce ( b.cntrct_end_dt,bb.cntrct_end_dt )>dla.activity_dt
                AND Coalesce ( b.cntrct_prd_mth,bb.cntrct_prd_mth ) = 24
              THEN '2 Yr Contract'
              WHEN Coalesce ( b.cntrct_end_dt,bb.cntrct_end_dt )>dla.activity_dt
              THEN 'Other Contract'
              ELSE 'Out of Contract'
          END AS curr_contract_term 
       , CASE
              WHEN Coalesce ( b.device_type_cd,bb.device_type_cd ) LIKE 'IP%'
              THEN Coalesce ( b.esn_num,bb.esn_num,dla.esn_num )
              ELSE b.eqp_device_id
          END
       , 'N'
       , NULL
       , Coalesce ( pp.plan_data_allow,'No Data' )
       , NULL
       , 'NONE'
       , CASE
              WHEN Coalesce ( b.prepaid_ind,bb.prepaid_ind,'N' ) = 'Y'
              THEN ( Coalesce ( pp.rpt_pplan_cd,'ST.PRE.UNK.DMY' ) )
              ELSE ( Coalesce ( pp.rpt_pplan_cd,'ST.POST.UNK.DMY' ) )
          END
       , DATE
       , DATE
       , NULL AS gift_data_allow
       , NULL AS boost_data_allow
       , NULL AS carryover_data_allow
       , NULL AS cust_type_cd_dla_act
  FROM ${UDMITVMDB}.dly_line_activity dla

  LEFT JOIN ${UDMITVMDB}.cust_acct_line_dly_hist b
    ON dla.sor_id = b.sor_id
   AND dla.cust_id = b.cust_id
   AND dla.cust_line_seq_id = b.cust_line_seq_id
   AND dla.activity_dt BETWEEN b.eff_dt
   AND b.exp_dt
   AND b.exp_dt>=${BDATE}

  LEFT JOIN ${STGDB}.caldh_eom bb
    ON dla.sor_id = bb.sor_id
   AND dla.cust_id = bb.cust_id
   AND dla.cust_line_seq_id = bb.cust_line_seq_id


  LEFT JOIN ${STGDB}.caldh_eom_first frst
    ON dla.sor_id = frst.sor_id
   AND dla.cust_id = frst.cust_id
   AND dla.cust_line_seq_id = frst.cust_line_seq_id

  LEFT JOIN ${STGDB}.calpp_dla_de pp_dla
    ON dla.sor_id = pp_dla.sor_id
   AND dla.cust_id = pp_dla.cust_id
   AND dla.cust_line_seq_id = pp_dla.cust_line_seq_id
   AND dla.activity_dt = pp_dla.activity_dt
   AND dla.activity_cd = pp_dla.activity_cd

  LEFT JOIN ${STGDB}.data_access_tier dat
    ON dla.sor_id = dat.sor_id
   AND dla.cust_id = dat.cust_id
   AND dla.cust_line_seq_id = dat.cust_line_seq_id


  LEFT JOIN ${UDMITVMDB}.cust_ecpd ecpd
    ON dla.sor_id = ecpd.sor_id
   AND dla.cust_id = ecpd.cust_id
   AND dla.activity_dt BETWEEN ecpd.ecpd_eff_dt
   AND ( Coalesce ( ecpd.ecpd_term_dt,( 1991231 ( DATE ) ) ) )

  LEFT JOIN ${STGDB}.hyp_breakage brk
    ON dla.sor_id = brk.sor_id
   AND dla.cust_id = brk.cust_id
   AND dla.cust_line_seq_id = brk.cust_line_seq_id

  LEFT JOIN ${STGDB}.new_fact_hyp_seg_dla_de seg
    ON dla.sor_id = seg.sor_id
   AND dla.cust_id = seg.cust_id
   AND dla.cust_line_seq_id = seg.cust_line_seq_id
   AND dla.activity_dt = seg.activity_dt
   AND dla.activity_cd = seg.activity_cd

  LEFT JOIN ${STGDB}.new_fact_hyp_seg_earliest seg2
    ON dla.sor_id = seg2.sor_id
   AND dla.cust_id = seg2.cust_id
   AND dla.cust_line_seq_id = seg2.cust_line_seq_id


  LEFT JOIN ${UDMITVMDB}.change_reason c
    ON dla.sor_id = c.sor_id
   AND dla.change_reas_cd = c.change_reas_cd
   AND c.sor_id IN ( 'V','E' )

  LEFT JOIN ${STGDB}.hyp_price_plan_xref pp
    ON Coalesce ( pp_dla.sor_id,dla.sor_id ) = pp.sor_id
   AND Coalesce ( pp_dla.pplan_cd,dla.pplan_cd_curr ) = pp.pplan_cd
   AND Coalesce ( pp_dla.pplan_mkt_cd,dla.pplan_mkt_cd_curr ) = pp.pplan_mkt_cd

  LEFT JOIN ${STGDB}.pplan_contract ppc
    ON Coalesce ( pp_dla.pplan_cd,dla.pplan_cd_curr ) = ppc.pplan_cd

  LEFT JOIN ${UDMITVMDB}.service svc
    ON pp_dla.sor_id = svc.sor_id
   AND pp_dla.svc_id = svc.svc_id

  LEFT JOIN ${UDMITVMDB}.outlet o
    ON dla.sor_id = o.sor_id
   AND dla.sls_outlet_id = o.sls_outlet_id
   AND o.sor_id IN ( 'V','E' )
   AND o.master_agent_id IS NOT NULL

  LEFT JOIN ${UDMITVMDB}.market m
    ON dla.sor_id = m.sor_id
   AND Coalesce ( dla.mkt_cd,'000' ) = m.mkt_cd

  LEFT JOIN ${STGDB}.score_decile_xref s
    ON dla.sor_id = s.sor_id
   AND dla.cust_id = s.cust_id
   AND dla.cust_line_seq_id = s.cust_line_seq_id

-- ADDED_NEW_LINE -- 04072023

LEFT OUTER JOIN ${UDMITVMDB}.CUST_ACCT_LINE_CNTRCT CALC
ON CALC.CUST_ID = dla.CUST_ID
AND CALC.CUST_LINE_SEQ_ID = dla.CUST_LINE_SEQ_ID
LEFT OUTER JOIN NTL_${BOX}_ALLVM.CONTRACT_TERM_V TRM 
ON TRM.CNTRCT_TERMS_CD = CALC.CNTRCT_TERM_ID

-- ADDED_NEW_LINE -- 04072023

 WHERE dla.activity_dt BETWEEN ${BDATE} AND ${EDATE}
   AND dla.activity_cd IN ( 'DE','D3','D6' )
   AND Coalesce ( pp.ctgry_cd,' ' )<>'26'
   AND dla.churn_ind = 'Y';



.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

CREATE VOLATILE TABLE vt_cadh
    AS (SELECT dla.sor_id
               ,dla.cust_id
               ,dla.acct_num
               ,dla.cust_line_seq_id
               ,dla.activity_dt
               ,dla.activity_cd
               ,cadh.rltd_acct_id
               ,cadh.duns_loc_num
               ,cadh.cust_type_cd
          FROM ${STGDB}.dla_sum_fact_stg_de dla
          LEFT OUTER JOIN ${UDMITVMDB}.cust_acct_dly_hist cadh
            ON dla.sor_id  =  cadh.sor_id
           AND dla.cust_id  =  cadh.cust_id
           AND dla.acct_num  =  cadh.acct_num
           AND dla.activity_dt BETWEEN cadh.eff_dt AND cadh.exp_dt
           AND cadh.exp_dt >= ${BDATE}
       )
  WITH DATA
PRIMARY INDEX (cust_id,cust_line_seq_id)
    ON COMMIT PRESERVE ROWS;

.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

UPDATE stg
  FROM ${STGDB}.dla_sum_fact_stg_de stg
     , vt_cadh v
   SET rltd_acct_id  =  Coalesce(v.rltd_acct_id,'UNTG')
       ,duns_loc_num  =  Coalesce(v.duns_loc_num,'UNTG')
       ,cust_type_cd_dla_act  =  v.cust_type_cd
 WHERE stg.cust_id  =  v.cust_id
   AND stg.cust_line_seq_id  =  v.cust_line_seq_id
   AND stg.activity_dt  =  v.activity_dt
   AND stg.activity_cd  =  v.activity_cd
   AND stg.acct_num  =  v.acct_num
   AND stg.sor_id  =  v.sor_id;

.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

CREATE VOLATILE TABLE vt_vertical
    AS (
SELECT stg.sor_id
       ,stg.cust_id
       ,stg.cust_line_seq_id
       ,stg.activity_cd
       ,stg.activity_dt
       ,CASE WHEN ver.vertical IS NOT NULL
             THEN ver.vertical
             WHEN ver.vertical IS NULL AND stg.cust_type_cd_dla_act IN ('FA','FT','FM','FS','GV','FX','US')
             THEN 'government'
             WHEN ver.vertical IS NULL AND hrchy_segmt  =  'CO Consumer'
             THEN 'Consumer'
             ELSE 'Unclassified'
        END AS vertical
  FROM ${STGDB}.dla_sum_fact_stg_de stg
  LEFT JOIN ${STGDB}.caldh_eom_vertical ver
    ON stg.sor_id            =  ver.sor_id
   AND stg.cust_id           =  ver.cust_id
   AND stg.cust_line_seq_id  =  ver.cust_line_seq_id
) WITH DATA
PRIMARY INDEX (cust_id,cust_line_seq_id)
ON COMMIT PRESERVE ROWS;

.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

UPDATE stg
  FROM ${STGDB}.dla_sum_fact_stg_de stg
     , vt_vertical ver
   SET vertical  =  ver.vertical
 WHERE stg.sor_id            =  ver.sor_id
   AND stg.cust_id           =  ver.cust_id
   AND stg.cust_line_seq_id  =  ver.cust_line_seq_id
   AND stg.activity_cd       =  ver.activity_cd
   AND stg.activity_dt       =  ver.activity_dt;

.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

UPDATE stg
  FROM ${STGDB}.dla_sum_fact_stg_de stg
     , ${STGDB}.ssfdsf_data_allow_stg dab
   SET gift_data_allow  =  dab.gift_data_allow
       ,boost_data_allow  =  dab.boost_data_allow
       ,carryover_data_allow  =  dab.carryover_data_allow
 WHERE stg.sor_id    =  dab.sor_id
   AND stg.cust_id   =  dab.cust_id
   AND stg.acct_num  =  dab.acct_num;

.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

INSERT INTO ${STGDB}.dla_sum_fact_stg
(rpt_mth,rpt_year,sor_id,cust_id,cust_line_seq_id,activity_cd,mtn,acct_num,cust_type_cd,rev_gen_ind,area_cd
,prepaid_ind,payment_type,revenue_type,in_contract_term,promo_type,access_tier,voice_pplan_access_tier
,arpu_tier,data_access_tier,access_amt,voice_access_amt,data_access_amt,channel_type,mkt_cd,tenure,prod_nm
,pplan_cd,pplan_mkt_cd,master_agent_id,hrchy_segmt,life_stage_segmt,ethnicity_segmt,rollup_cd,mnc_ind
,f1k_ind,vzw_value,lang_pref_ind,birth_year,breakage_ind,rltd_acct_id,duns_loc_num,ecpd_profile_id
,sls_outlet_id,vertical,port_status_cd,port_carrier_cd,orig_sor_id,master_agent_area_cd,activity_dt
,sls_prsn_id,vsn_cust_type_cd,data_pack_req_amt,device_prod_nm,device_type_cd,esn_num,secured_prod_nm
,line_type_cd,pplan_line_acct_cd,acct_access_amt,acct_voice_access_amt,acct_data_access_amt,user_id
,change_reas_cd,plan_type,pplan_share,pplan_group,eqp_prod_nm,area_desc,region_cd,region_desc
,sub_region_cd,managed_ind,device_grouping,device_generation,device_brand_nm,data_tier,odi_ind
,churn_score_decile,edw_edge_qualified_ind,curr_contract_term,eqp_device_id,loan_num,total_data_allow
,plan_data_allow,bonus_data_allow,ves_account_id,rpt_pplan_cd,last_upd_dt,insert_dt,gift_data_allow
,boost_data_allow,carryover_data_allow
,gross_adds
,voluntary_disconnects
,involuntary_disconnects
,act_cnt
,deact_de_cnt
,deact_d3_cnt
,deact_d6_cnt
,react_cnt
)SELECT rpt_mth,rpt_year,sor_id,cust_id,cust_line_seq_id,activity_cd,mtn,acct_num,cust_type_cd,rev_gen_ind,area_cd
,prepaid_ind,payment_type,revenue_type,in_contract_term,promo_type,access_tier,voice_pplan_access_tier
,arpu_tier,data_access_tier,access_amt,voice_access_amt,data_access_amt,channel_type,mkt_cd,tenure,prod_nm
,pplan_cd,pplan_mkt_cd,master_agent_id,hrchy_segmt,life_stage_segmt,ethnicity_segmt,rollup_cd,mnc_ind
,f1k_ind,vzw_value,lang_pref_ind,birth_year,breakage_ind,rltd_acct_id,duns_loc_num,ecpd_profile_id
,sls_outlet_id,vertical,port_status_cd,port_carrier_cd,orig_sor_id,master_agent_area_cd,activity_dt
,sls_prsn_id,vsn_cust_type_cd,data_pack_req_amt,device_prod_nm,device_type_cd,esn_num,secured_prod_nm
,line_type_cd,pplan_line_acct_cd,acct_access_amt,acct_voice_access_amt,acct_data_access_amt,user_id
,change_reas_cd,plan_type,pplan_share,pplan_group,eqp_prod_nm,area_desc,region_cd,region_desc
,sub_region_cd,managed_ind,device_grouping,device_generation,device_brand_nm,data_tier,odi_ind
,churn_score_decile,edw_edge_qualified_ind,curr_contract_term,eqp_device_id,loan_num,total_data_allow
,plan_data_allow,bonus_data_allow,ves_account_id,rpt_pplan_cd,last_upd_dt,insert_dt,gift_data_allow
,boost_data_allow,carryover_data_allow
,Sum(gross_adds)
,Sum(voluntary_disconnects)
,Sum(involuntary_disconnects)
,Sum(act_cnt)
,Sum(deact_de_cnt)
,Sum(deact_d3_cnt)
,Sum(deact_d6_cnt)
,Sum(react_cnt)
FROM ${STGDB}.dla_sum_fact_stg_de
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38
,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72
,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93;

.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

COLLECT STATS COLUMN (sor_id,cust_id,cust_line_seq_id),COLUMN (sor_id,cust_id,cust_line_seq_id,rpt_mth,activity_cd,activity_dt)
ON ${STGDB}.dla_sum_fact_stg;


DELETE FROM ${STGDB}.dla_sum_fact_stg where 
( sor_id , cust_id, cust_line_seq_id, activity_dt, activity_cd  )  in 
( select sor_id , cust_id, cust_line_seq_id, activity_dt, activity_cd 
  from ${UDMITVMDB}.dly_line_activity 
  where line_type_cd='T' and change_reas_cd ='CD' and ACTIVITY_CD like 'D%'
) ;

.IF ERRORCODE != 0 THEN .QUIT ERRORCODE


/**************************************/
/*** DSF FEATURE-SERVICE ALLOWANCES ***/
/**************************************/

DELETE FROM ${STGDB}.DSF_FEAT_ALLOW;
.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

INSERT INTO ${STGDB}.dsf_feat_allow
SELECT  stg.sor_id
       , stg.cust_id
       , stg.cust_line_seq_id
       , stg.act
