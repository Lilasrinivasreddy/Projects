CHURN_POSTPAID_BASE_TOTAL,
CHURN_POSTPAID_BASE_PHONE,
CHURN_POSTPAID_BASE_SMARTPHONE,
CHURN_POSTPAID_BASE_TABLET,
CHURN_POSTPAID_BASE_HUM,
CHURN_POSTPAID_BASE_OTHER,
CHURN_PREPAID_BASE_TOTAL,
CHURN_PREPAID_BASE_SMARTPHONE,
CHURN_POSTPAID_FWA_BASE_TOTAL,
VOLUNTARY_POSTPAID_DISCOS,
INVOLUNTARY_POSTPAID_DISCOS,
VOL_POSTPAID_PHONE_DISCOS,
VOL_POSTPAID_TABLET_DISCOS,
VOL_POSTPAID_OTHER_DISCOS,
INVOL_POSTPAID_PHONE_DISCOS,
INVOL_POSTPAID_TABLET_DISCOS,
INVOL_POSTPAID_OTHER_DISCOS,
GROSS_ADDS_TOTAL,
GROSS_ADDS_PHONE,
GROSS_ADDS_SMARTPHONE,
GROSS_ADDS_TABLET,
GROSS_ADDS_HUM,
GROSS_ADDS_APPLE_SMARTWATCH,
GROSS_ADDS_OTHER,
OS_MIX_APPLE_SMARTPHONE_GROSS_ADDS,
OS_MIX_ANDROID_SMARTPHONE_GROSS_ADDS,
OS_MIX_SAMSUNG_SMARTPHONE_GROSS_ADDS,
OS_MIX_GOOGLE_SMARTPHONE_GROSS_ADDS,
OS_MIX_OTHER_ANDROID_SMARTPHONE_GROSS_ADDS,
OS_MIX_TOTAL_SMARTPHONE_GROSS_ADDS,
OS_MIX_TOTAL_PHONE_GROSS_ADDS,
OS_MIX_TOTAL_DEVICE_GROSS_ADDS,
OS_MIX_MOTO_SMARTPHONE_GROSS_ADDS,
GROSS_ADDS_TOTAL_FWA,
B2B_M2M_GROSS_ADDS_TOTAL_FWA,
GROSS_ADDS_OTHER_WEARABLES,
GROSS_ADDS_PHONE_AAL,
2nd LINE ACTIVITY GROSS ADDS
GROSS_ADDS_PHONE_NEW
2nd LINE ACTIVITY NET ADDS
NET_ADDS_TOTAL,
NET_ADDS_PHONE,
NET_ADDS_SMARTPHONE,
NET_ADDS_TABLET,
NET_ADDS_HUM,
NET_ADDS_APPLE_SMARTWATCH,
NET_ADDS_OTHER,
NET_ADDS_TOTAL_FWA,
B2B_M2M_NET_ADDS_TOTAL_FWA,
NET_ADDS_OTHER_WEARABLES,
NET_DEACTS_TOTAL,
NET_DEACTS_PHONE,
NET_DEACTS_SMARTPHONE,
NET_DEACTS_TABLET,
NET_DEACTS_HUM,
NET_DEACTS_APPLE_SMARTWATCH,
NET_DEACTS_OTHER,
NET_DEACTS_TOTAL_FWA,
B2B_M2M_NET_DEACTS_TOTAL_FWA,
NET_DEACTS_OTHER_WEARABLES,
ARD_NUM,
ARD_DEN,

#!/bin/ksh
#------------------------------------------------------------------------------
# %Z% Verizon Wireless / SEDW
# %Z% EQUIP_FACT_indirect_upgrades.btq Version %I%
# %Z% Created by Gary Fambrough on 08/04/10
# %Z% Modified on: %H% %T%
#------------------------------------------------------------------------------

#-----------------------------------------------------------------------------
# Comments
# 2012_0402 GDF added 1 new columns UNIT_ONLY_IND  (not adding, VES_BUS_ID, VES_SEGMENT)
# 2012_0403 GDF Modified to pull ACCT_NUM from CAL vs DAD
# 2012_0430 GDF Modified previous device logic to look at all history when current day's pull
# 2012_0725 GDF added return invc num and return invc line num to the ESF table
# 2012_1004 YS  Added CHANGE_REAS_CD of 'AV'
# 2012_1008 YS  Added ORIG_INVC_NUM, ORIG_STORE_NUM, ORIG_SLS_OUTLET_ID, IA_ITEM_SUBCATEGORY_CD
# 2013_0226 YS  Added FULL_PRICE_AFTER_DISC_IND, FULL_PRICE_B4_DISC_IND, DISCOUNT_CD, ADJ_PS_DEPT_NUM, CNTRCT_TENURE_SUM, ALLTEL_IND
# 2013_0703 YS  Added CLNR_ELIGIBILITY_IND, CUST_DEVICE_SRC (Columns to identify CLNR eligibility)
# 2013_0715 YS  Added ALT_UPGRADE_REAS_CD, CNTRCT_MTN, CNTRCT_CUST_ID, CNTRCT_CUST_LINE_SEQ_ID, CNTRCT_ACCT_NUM
# 2013_0715 YS  Added condition in the IN statement for DAD.CHANGE_REAS_CD = D2
# 2013_0916 YS  Added CREDIT_APP_NUM
# 2013_1003 YS  Added EDGE_INTERESTED_IND, EDGE_QUALIFIED_IND, EDW_EDGE_QUALIFIED_IND and PYMNT_TENDER_TYPE_CD
# 2014_0114 YS  Added HR_EMP_ID,CLIENT_ID
# 2014_0228 YS  Added CHANGE_REAS_CDs 'EA','TA','SA','T2','S2'
# 2014_0228 YS  Added LOAN_TYPE_CD
# 2014_0417 YS  Added CREDIT_LIMIT_AMT
# 2014_0513 YS  Added CURR_CONTRACT_TERM, PREV_CONTRACT_TERM
# 2014_0611 YS  Added LINE_TYPE_CD,VSN_CUST_TYPE_CD,PPLAN_CD,PPLAN_MKT_CD
# 2015_0318 YS  Added CONV_IND,TRADEIN_IND
# 2015_0511 YS  Added PPLAN_CD_PREV, PPLAN_MKT_CD_PREV, RPT_PPLAN_CD, RPT_PPLAN_CD_PREV
# 2015_0720 YS  Added RISK_PROFILE_CD, DOWN_PYMNT_PCT, EDW_EDGE_QUALIFIED_SRC_DESC
# 2016_0127 YS  Updated Qualified REGION_CD,REGION_DESC and AREA_DESC columns in SQL
# 2016_0809 YS  Added INVENTORY_ADJ_IND
# 2017_0105 BA  Added CHANGE_REAS_CD '2D' and changed CALS.SEGMT_TYPE_CD from 'HRCHY_SEGMT' to 'MGD_SEGMT'
# 2017-0124 BA  Modified to pull MGD_SEGMT from SSF instead of HRCHY_SEGMT
# 2017-0208 BA  Added 4G to ACTIVITY_CD
# 2017_0504 BA  Updated logic for PPLAN_CD_PREV, PPLAN_MKT_CD_PREV
# 2017_0505 BA  Added TRANS_TS
# 2017_1101 BA  Added logic to update Double counting units sold from Netace + the proxy sale
# 2018_0508 BA  Added INDIR_CHNL_FIN_IND
# 2018_0731 BA  5G Changes
# 2018_1023 BA  858571-39_Restock_fee Changes Added BYOD_SIM_ACT_IND,COLD_STOCK_IND,NEW_IN_BOX_IND
# 2019_0401 BA  Added VZ2_SEGMT_CD ,POS_VZ2_SEGMT_CD ,POS_ECPD_PROFILE_ID, POS_VSN_CUST_TYPE_CD, EOM_CUST_ID & EOM_CUST_LINE_SEQ_ID
# 2020_0110 PM  Added SDR_ELIG
# 2021_0614 BA	Added columns ERP_DIST_CHNL_CD,ERP_COST_CTR_CD & MYBIZ_CHNL_DESC 
# 2021_0811 BA	Added columns POS_ERP_CUST_SUB_SEGMT_CD,ERP_CUST_SUB_SEGMT_CD ,ACT_ERP_DIST_CHNL_CD, ERP_DIST_CHNL_CD,ERP_LOC_CD,ERP_MKT_CD 
# 2021_0920 BA	Added columns QUOTE_ID 
# 2021_1118 BA	Added columns GIFT_IND 
# 2022_0425 RK  Added columns SIM_TYPE_CD
# 2023_0810 BA  Added Columns BGID_SOURCE,BGID

# INDIRECT UPGRADES
########################################
# FOR TESTING PURPOSES ONLY
#export  LOGON_STRING=`cat ~/logon_file_udm`
#export EQUIP_BDAY_DT=1160126
#export EQUIP_BMTH_DT=1160101
#export EQUIP_RUN_TYPE=DAILY
#export     UDMDB=UDM_DEV_TBLS
#export  UDMSTGDB=UDM_DEVSTG_TBLS
#export  UDMUSRDB=UDM_PRDUSR_TBLS
#export UDMITVMDB=UDM_PRD_ITVM
#export BTEQ_TYPE=curr
#export BOX=dev
# FOR TESTING PURPOSES ONLY
########################################



if [ ${BTEQ_TYPE} == "curr" ]; then
  export CAL_TABLE="CUST_ACCT_LINE"
  export CAL_DATES=""
  export PREV_DEVICE_DATES=""
  #export PPLAN_TABLE="CUST_ACCT_LINE_PPLAN"
  export PPLAN_TABLE="CAL_PPLAN"
  export PPLAN_DATES=""  
  
else  
  export CAL_TABLE="CUST_ACCT_LINE_DLY_HIST"
  export CAL_DATES="AND DAD_TMP.TRANS_DT + 2 >= CAL.EFF_DT AND DAD_TMP.TRANS_DT + 2 <= CAL.EXP_DT"
#  export PREV_DEVICE_DATES="AND FACT.PYMNT_DT > CALDH.EXP_DT"  
  export PREV_DEVICE_DATES="AND FACT.PYMNT_DT > CALDH.EFF_DT"  
  #export PPLAN_TABLE="CUST_ACCT_LINE_PPLAN_HIST"
  export PPLAN_TABLE="UDM_PRD_ITVM.CUST_ACCT_LINE_PPLAN_HIST"
  export PPLAN_DATES="AND DAD_TMP.TRANS_DT + 2 >= PPLAN.EFF_DT AND DAD_TMP.TRANS_DT + 2 <= PPLAN.EXP_DT"    
fi


bteq <<-EOF
  .LOGON ${LOGON_STRING};

CREATE VOLATILE TABLE PS_MKT_TMP_${EQUIP_RUN_TYPE}, NO LOG
(
   PS_MKT_CD                 CHAR(6)
  ,PS_MKT_REGION_DESC        VARCHAR(30)
  ,PS_MKT_AREA_DESC          VARCHAR(30)
  ,REGION_DESC               VARCHAR(50)
  ,AREA_DESC                 VARCHAR(50)
)
PRIMARY INDEX (PS_MKT_CD)
ON COMMIT PRESERVE ROWS;

    .if errorcode != 0 then .quit errorcode


DELETE FROM PS_MKT_TMP_${EQUIP_RUN_TYPE};
    .if errorcode != 0 then .quit errorcode


--**************************************************************
--* Create peoplesoft region table
--**************************************************************

INSERT INTO PS_MKT_TMP_${EQUIP_RUN_TYPE}
SELECT
   PS_MKT.PS_MKT_CD
  ,PS_TMP.PS_MKT_REGION_DESC
  ,PS_TMP.PS_MKT_AREA_DESC
  ,PS_TMP.REGION_DESC
  ,PS_TMP.AREA_DESC
FROM
${UDMITVMDB}.PEOPLESOFT_MARKET PS_MKT,
(
SELECT
   PS_MKT_REGION_DESC
  ,PS_MKT_AREA_DESC
  ,REGION_DESC
  ,AREA_DESC
FROM (
  SELECT
     PS.PS_MKT_REGION_DESC AS PS_MKT_REGION_DESC
    ,PS.PS_MKT_AREA_DESC AS PS_MKT_AREA_DESC
    ,COALESCE(MKT.MKT_PROD_CD, 'A') as MKT_PROD_CD
    ,MKT.REGION_DESC AS REGION_DESC
    ,MKT.AREA_DESC AS AREA_DESC
    ,COUNT(*) AS COUNTER
  FROM	${UDMITVMDB}.PEOPLESOFT_MARKET PS
  LEFT OUTER JOIN ${UDMITVMDB}.MARKET MKT
    ON PS.PS_MKT_CD = MKT.PS_MKT_CD
  WHERE (MKT.REGION_DESC IS NOT NULL OR MKT.REGION_DESC = '')
  GROUP BY PS_MKT_REGION_DESC, PS_MKT_AREA_DESC, MKT_PROD_CD, MKT.REGION_DESC, MKT.AREA_DESC
  ) A
  QUALIFY
    	CSUM(1
    		,PS_MKT_REGION_DESC ASC
    		,PS_MKT_AREA_DESC ASC
    		,MKT_PROD_CD DESC
    		,COUNTER DESC
    		,REGION_DESC ASC
    		,AREA_DESC ASC) = 1
GROUP BY PS_MKT_REGION_DESC
) PS_TMP
WHERE PS_MKT.PS_MKT_REGION_DESC = PS_TMP.PS_MKT_REGION_DESC
;

	.if errorcode != 0 then .quit errorcode

CREATE VOLATILE TABLE CAL_PPLAN AS
(
SELECT
SOR_ID
,CUST_ID
,CUST_LINE_SEQ_ID
,PPLAN_CD
,PPLAN_MKT_CD
,PPLAN_EXP_DT
,PPLAN_EFF_DT
,TRANS_DT 
FROM ${UDMITVMDB}.CUST_ACCT_LINE_PPLAN
WHERE PPLAN_CD <> '99999'
QUALIFY ROW_NUMBER() OVER (PARTITION BY SOR_ID, CUST_ID, CUST_LINE_SEQ_ID ORDER BY COALESCE ( PPLAN_EXP_DT , DATE '9999-12-31')  DESC, PPLAN_EFF_DT  DESC, TRANS_DT DESC)=1
) WITH DATA
PRIMARY INDEX( SOR_ID, CUST_ID, CUST_LINE_SEQ_ID)
ON COMMIT PRESERVE ROWS;
    .if errorcode != 0 then .quit errorcode	

COLLECT STATS ON CAL_PPLAN INDEX(SOR_ID, CUST_ID, CUST_LINE_SEQ_ID);
    .if errorcode != 0 then .quit errorcode	
	
/********************************************************************/
/* Load into volatile tables
/********************************************************************/

DELETE FROM ${UDMSTGDB}.EQUIP_SUM_FACT_TMP1_${EQUIP_RUN_TYPE};
    .if errorcode != 0 then .quit errorcode

INSERT INTO ${UDMSTGDB}.EQUIP_SUM_FACT_TMP1_${EQUIP_RUN_TYPE}
SELECT
   DAD_TMP.TRANS_DT - (extract (day from DAD_TMP.TRANS_DT) - 1)
                                     (FORMAT 'MMDDYYYY')   as RPT_MTH          -- RPT_MTH  1 
  ,DAD_TMP.TRANS_DT                                                  -- PYMNT_DT  2
  ,DAD_TMP.TRANS_TM                                                  -- PYMNT_TM  3
  ,NULL                                                              -- INVC_NUM  4
  ,NULL                                                              -- INVC_LINE_NUM  5
  ,NULL                                                              -- INVC_DT  6
  ,NULL                                                              -- STORE_NUM  7
  ,DAD_TMP.SLS_OUTLET_ID                                             -- TRANS_SLS_OUTLET_ID  8
  ,CAL.SLS_DIST_CHNL_TYPE_CD                                         -- ACT_SLS_DIST_CHNL_TYPE_CD  9
  ,DAD_TMP.SLS_DIST_CHNL_TYPE_CD                                     -- SLS_DIST_CHNL_TYPE_CD  10
  ,'R'  AS ACQ_RET_IND                                               -- ACQ_RET_IND  11
  ,DAD_TMP.SOR_ID                                                    -- SOR_ID  12
  ,DAD_TMP.CUST_ID                                                   -- CUST_ID  13
  ,DAD_TMP.CUST_LINE_SEQ_ID                                          -- CUST_LINE_SEQ_ID  14
  ,CAL.ACCT_NUM  --DAD_TMP.ACCT_NUM                                  -- ACCT_NUM  15
  ,DAD_TMP.MTN                                                       -- MTN  16
  ,CAL.CUST_TYPE_CD                                                  -- CUST_TYPE_CD  17
  ,DAD_TMP.CHANGE_REAS_CD                                            -- ESN_CHANGE_REAS_CD  18
  ,DAD_TMP.ESN_NUM                                                   -- ESN_NUM  19
  ,DAD_TMP.PROD_NM                                                   -- PROD_NM  20
  ,NULL                                                              -- EQP_DEVICE_ID  21
  ,NULL                                                              -- DEVICE_PROD_NM  22
  ,DAD_TMP.DEVICE_TYPE_CD                                            -- DEVICE_TYPE_CD  23
  ,NULL                                                              -- CNTRCT_TYPE  24
  ,NULL                                                              -- IA_ITEM_CLASS_CD  25
  ,NULL                                                              -- ITEM_CD  26
  ,NULL                                                              -- OFFER_ID  27
  ,NULL                                                              -- OFFER_NM  28
  ,NULL                                                              -- DISCRETION_REAS_DESC  29
  ,NULL                                                              -- PRIMARY_POS_RETURN_CD  30
  ,NULL                                                              -- SECONDARY_POS_RETURN_CD  31
  ,DAD_TMP.PS_MKT_CD                                                 -- PS_MKT_CD  32
  ,CASE WHEN DAD_TMP.SOR_ID = 'E' THEN 'ALLTEL' ELSE 'VZW' END       -- ORIG_SOR_ID  33
  ,NULL                                                              -- PS_DEPT_NUM  34
  ,DAD_TMP.SLS_MANAGED_IND                                           -- POS_MANAGED_IND  35
  ,DAD_TMP.SLS_MANAGED_IND                                           -- CAL_MANAGED_IND  36
  ,CAL.PREPAID_IND                                                   -- POS_PREPAID_IND  37
  ,CAL.PREPAID_IND                                                   -- CAL_PREPAID_IND  38
  ,CAL.REV_GEN_IND                                                   -- REV_GEN_IND  39
  ,CAL.MKT_CD                                                        -- MKT_CD  40
  ,NULL                                                              -- REGION_CD  41
  ,NULL                                                              -- AREA_CD  42
  ,NULL                                                              -- TRANS_REGION_DESC  43
  ,NULL                                                              -- TRANS_AREA_DESC  44
  ,NULL                                                              -- ESN_NUM_PREV  45
  ,NULL                                                              -- PROD_NM_PREV  46
  ,NULL                                                              -- EQP_DEVICE_ID_PREV  47
  ,NULL                                                              -- PROD_NM_PREV_PREV  48
  ,NULL                                                              -- DEVICE_TYPE_CD_PREV  49
  ,NULL                                                              -- ROLLUP_CD  50
  ,NULL                                                              -- MNC_IND  51
  ,NULL                                                              -- F1K_IND  52
  ,NULL                                                              -- RLTD_ACCT_ID  53
  ,NULL                                                              -- ECPD_PROFILE_ID  54
  ,NULL                                                              -- VZW_VALUE  55
  ,NULL                                                              -- DUNS_LOC_NUM  56
  ,NULL                                                              -- LIFE_STAGE_SEGMT  57
  ,NULL                                                              -- ETHNICITY_SEGMT  58
  ,NULL                                                              -- HRCHY_SEGMT  59
  ,NULL                                                              -- VERTICAL  60
  ,'RETENTION'   -- trans type                                       -- TRANS_TYPE_DESC  61
  ,NULL                                                              -- NRP_PRC_AMT  62
  ,1 AS SOLD_QTY                                                     -- SOLD_QTY  63
  ,NULL                                                              -- ITEM_DISC_AMT  64
  ,NULL                                                              -- ITEM_PRICE_AMT  65
  ,NULL                                                              -- ITEM_COST_AMT  66
  ,NULL                                                              -- ALLOC_AMT  67
  ,NULL                                                              -- DEALLOC_AMT  68
  ,NULL                                                              -- MGR_DISC_AMT  69
  ,NULL                                                              -- REP_DISC_AMT  70
  ,NULL                                                              -- INSTANT_REBATE_AMT  71
  ,CURRENT_DATE                                                      -- INSERT_DT  72
  ,NULL                                                              -- UPDATE_DT  73
  ,COALESCE(DAD_TMP.ROW_TYPE_ID,'IUG')                               -- ROW_TYPE_ID  74
  ,'N'                                                               -- DUPLICATE_IND  75
  ,NULL                                                              -- GROSS_DISCOUNT  76
  ,0                                                                 -- RETURN_QTY  77
  ,1                                                                 -- SALES_QTY  78
  ,SUM(SOLD_QTY)                                                     -- NET_SALES  79
  
  ---- new fields for rev3 --
	,CASE WHEN ACQ_RET_IND = 'R' THEN 'Y' ELSE 'N'  END                -- FIN_UPG_FLAG  80
	,'Y'                                                               -- FIN_TOT_FLAG  81
	,NULL                                                              -- BASE_PRC_TYPE_CD  82
	,NULL                                                              -- DEPLETION_STORE_NUM  83
	,NULL                                                              -- DISC_REAS_CD  84
	,NULL                                                              -- EMP_ID  85
	,NULL                                                              -- FULFILLMENT_IND  86
	,NULL                                                              -- IA_ITEM_CATEGORY_CD  87
	,NULL                                                              -- IA_ITEM_GROUP_CD  88
	,NULL                                                              -- IA_UNBUNDLE_MULTIPLIER  89
	,NULL                                                              -- ITEM_TYPE  90
	,NULL                                                              -- NETACE_RETURN_CD  91
	,NULL                                                              -- ORDER_TYPE  92
	,NULL                                                              -- ORIG_INVC_DT  93
	,NULL                                                              -- POS_ORIG_SLS_PRSN_ID  94
	,DAD_TMP.PS_REGION_CD                                              -- PS_REGION_CD  95
	,NULL                                                              -- REBATE_IND  96
	,NULL                                                              -- REFUND_APPLIED_IND  97
	,NULL                                                              -- RETURN_EXCH_TYPE  98
	,NULL                                                              -- SIM_IND  99
	,NULL                                                              -- SLS_PRSN_ID  100
	,NULL                                                              -- SLS_TYPE  101
	,NULL                                                              -- SR_RETURN_IND  102
	,NULL                                                              -- USER_ID  103
	,NULL                                                              -- POS_SRC_ID  104
	,NULL                                                              -- LINE_ITEM_SLS_PRSN_ID  105
	,NULL                                                              -- DISCRETION_REAS_CD  106
	,NULL                                                              -- GIFT_CARD_NUM	 107

---- new fields for rev4 --	
	,'N'                                                               -- UNIT_ONLY_IND  108
	,NULL                                                              -- RETURN_INVC_NUM  109
	,NULL                                                              -- RETURN_INVC_LINE_NUM  110
	
---- new fields on 09/04/2012 --
	,NULL                                                              -- ORIG_INVC_NUM 111
	,NULL                                                              -- ORIG_STORE_NUM 112
	,NULL                                                              -- ORIG_SLS_OUTLET_ID 113
	,NULL                                                              -- IA_ITEM_SUBCATEGORY_CD 114
	
---- new fields on 01/15/2013 --	
        ,NULL                                                            -- FULL_PRICE_AFTER_DISC_IND 115
        ,NULL                                                            -- FULL_PRICE_B4_DISC_IND 116
        ,NULL                                                            -- DISCOUNT_CD 117
        ,NULL                                                            -- ADJ_PS_DEPT_NUM 118
	,CASE 
            WHEN CAL.CNTRCT_TERM_DT BETWEEN (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) + 1) AND (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) + 31) THEN 'd4 1 Mo Left'
            WHEN CAL.CNTRCT_TERM_DT BETWEEN (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) + 32) AND (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) + 62) THEN 'd3 2 Mos Left'
            WHEN CAL.CNTRCT_TERM_DT BETWEEN (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) + 63) AND (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) + 92) THEN 'd2 3 Mos Left'
            WHEN CAL.CNTRCT_TERM_DT BETWEEN (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) + 93) AND (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) + 123) THEN 'd1 4 Mos Left'
            WHEN CAL.CNTRCT_TERM_DT BETWEEN (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) + 124) AND (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) + 365) THEN 'c Cntrct Mos 13-20'
            WHEN CAL.CNTRCT_TERM_DT BETWEEN (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) + 366) AND (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) + 731) THEN 'b Cntrct Mos 1-12'
            WHEN CAL.CNTRCT_TERM_DT BETWEEN (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) - 123) AND (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH)) THEN 'f 1-4 Mos Past'
            WHEN CAL.CNTRCT_TERM_DT BETWEEN (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) - 365) AND (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) - 124) THEN 'g 5-12 Mos Past'
            WHEN CAL.CNTRCT_TERM_DT BETWEEN (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) - 730) AND (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) - 366) THEN 'h 13-24 Mos Past'
            WHEN CAL.CNTRCT_TERM_DT < (COALESCE(DAD_TMP.TRANS_DT,RPT_MTH) - 730) THEN 'i 25 Mos Plus Past'
            WHEN CAL.CNTRCT_TERM_DT IS NULL THEN 'i 25 Mos Plus Past'
            ELSE 'b Cntrct Mos 1-12' 
         END CNTRCT_TENURE_SUM                                           -- CNTRCT_TENURE_SUM 119
        ,NULL                                                            -- ALLTEL_IND 220
        
---- new fields on 07/03/2013 --        
        ,NULL                                                                     -- CLNR_ELIGIBILITY_IND 221
        ,NULL                                                                     -- CUST_DEVICE_SRC 222
        
---- new fields on 07/15/2013 --    
        ,NULL                                                            -- ALT_UPGRADE_REAS_CD 123
        ,NULL                                                            -- CNTRCT_MTN 124
        ,NULL                                                            -- CNTRCT_CUST_ID 125
        ,NULL                                                            -- CNTRCT_CUST_LINE_SEQ_ID 126
        ,NULL                                                            -- CNTRCT_ACCT_NUM 127

---- new fields on 09/16/2013 --            
        ,NULL                                                            -- CREDIT_APP_NUM
		
---- new fields on 10/03/2013 --     
        ,NULL                                                            -- EDGE_INTERESTED_IND 129
        ,NULL                                                            -- EDGE_QUALIFIED_IND 130
        ,NULL                                                            -- EDW_EDGE_QUALIFIED_IND 131
        ,NULL                                                            -- PYMNT_TENDER_TYPE_CD 132	
		
---- new fields on 01/14/2014 --     
        ,NULL                                                            -- HR_EMP_ID 133
        ,DAD_TMP.CLIENT_ID                                               -- CLIENT_ID 134
		
---- new fields on 02/28/2014 --   		
		,DAD_TMP.LOAN_TYPE_CD                                            -- LOAN_TYPE_CD 135
		
---- new fields on 04/17/2014 --   		
		,NULL                                                            -- CREDIT_LIMIT_AMT 136
		
---- new fields on 05/13/2014 -- 
        ,NULL                                                            -- CURR_CONTRACT_TERM 137		
		,NULL                                                            -- PREV_CONTRACT_TERM 138
		
---- new fields on 06/11/2014 -- 
        ,CAL.LINE_TYPE_CD                                                -- LINE_TYPE_CD 139		
		,CAL.VSN_CUST_TYPE_CD                                            -- VSN_CUST_TYPE_CD 140
        ,PPLAN.PPLAN_CD                                                  -- PPLAN_CD 141
		,PPLAN.PPLAN_MKT_CD                                              -- PPLAN_MKT_CD 142		
		
---- new fields on 03/18/2015 -- 
		,NULL                                                            -- CONV_IND 143
		,NULL                                                            -- TRADEIN_IND 144
		
---- new fields on 05/11/2015 -- 
        ,NULL                                                                     -- PPLAN_CD_PREV 145		
		,NULL                                                                     -- PPLAN_MKT_CD_PREV 146
        ,NULL                                                                     -- RPT_PPLAN_CD 147
		,NULL                                                                     -- RPT_PPLAN_CD_PREV 148				

---- new fields on 07/20/2015 -- 
		,NULL                                                                     -- RISK_PROFILE_CD 149
		,NULL                                                                     -- DOWN_PYMNT_PCT 150
		,NULL                                                                     -- EDW_EDGE_QUALIFIED_SRC_DESC 151

---- new fields on 07/20/2015 -- 		
		,NULL                                                                     -- INVENTORY_ADJ_IND 152
		
---- new fields on 09/20/2016 --		
		,NULL                                                                     -- EQP_CLASS_DESC 153
		,NULL                                                                     -- EQP_PROGRAM_CD 154
		,NULL                                                                     -- EQP_GRP_DESC 155
		,NULL                                                                     -- EQP_TYPE_DESC 156
		,NULL                                                                     -- EQP_CTGRY_DESC 157
		,NULL                                                                     -- EQP_DESC 158
		,NULL                                                                     -- UNBUNDLE_MULTIPLIER 159
		,DAD_TMP.TRANS_TS														  -- TRANS_TS 160
		,NULL																	  -- INDIR_CHNL_FIN_IND 161
		,NULL													  				  -- BYOD_SIM_ACT_IND 162
		,NULL													  	  			  -- COLD_STOCK_IND 163
		,NULL													      			  -- NEW_IN_BOX_IND 164
		,NULL																	  -- VZ2_SEGMT_CD 165				-- Added 1190401
		,NULL														  			  -- POS_VZ2_SEGMT_CD 166			-- Added 1190401
		,NULL													  				  -- POS_ECPD_PROFILE_ID 167		-- Added 1190401
		,NULL													  				  -- POS_VSN_CUST_TYPE_CD 168		-- Added 1190401
		,DAD_TMP.CUST_ID                                                   		  -- EOM_CUST_ID 169				-- Added 1190401
		,DAD_TMP.CUST_LINE_SEQ_ID                                          		  -- EOM_CUST_LINE_SEQ_ID 170		-- Added 1190401
		,NULL                                                                     -- SDR_ELIG                       -- Added 1200110
		,NULL                                                                     -- ERP_DIST_CHNL_CD 172			-- Added 1210614
		,NULL                                                                     -- ERP_COST_CTR_CD 173			-- Added 1210614
		,NULL                                                                     -- MYBIZ_CHNL_DESC 174 			-- Added 1210614
		,NULL                                                                     -- ERP_CUST_SUB_SEGMT_CD 175                 -- Added 1210811
		,NULL                                                                     -- ERP_LOC_CD 176                            -- Added 1210811
		,NULL                                                                    -- POS_ERP_CUST_SUB_SEGMT_CD 177              -- Added 1210811
		,NULL                                                                    -- ACT_ERP_DIST_CHNL_CD  178                  -- Added 1210811
		,DAD_TMP.PS_MKT_CD                                                       -- ERP_MKT_CD  179                            -- Added 1210811
		,NULL                                                                    -- QUOTE_ID  180                 -- Added 1210920
		,NULL                                                                    -- GIFT_IND   181 -- Added 1211118
		,NULL                                                           		 --SIM_TYPE_CD 182 Added 1220425
		,NULL																	 	--BGID_SOURCE 183						--Added 1230810	
		,NULL																	 	--BGID	184							--Added 1230810	

FROM
(
		SELECT
				 DAD.TRANS_DT
				,DAD.TRANS_TM
				,DAD.SLS_OUTLET_ID
				,DAD.SOR_ID
				,DAD.CUST_ID
				,DAD.CUST_LINE_SEQ_ID
				,DAD.ACCT_NUM
				,DAD.MTN
				,DAD.CHANGE_REAS_CD
				,DAD.ESN_NUM
				,DAD.PROD_NM
				,DAD.DEVICE_TYPE_CD
				,DAD.SLS_DIST_CHNL_TYPE_CD
				,MH.MANAGED_IND AS SLS_MANAGED_IND
				,MH.PS_MKT_CD   AS PS_MKT_CD
				,MH.REGION_CD   AS PS_REGION_CD
				,DAD.CLIENT_ID
				,DAD.LOAN_TYPE_CD
				,DAD.TRANS_TS
				,CASE WHEN DAD.CHANGE_REAS_CD='UN' THEN 'IUP' ELSE NULL END AS ROW_TYPE_ID			
				,ROW_NUMBER() OVER (PARTITION BY DAD.TRANS_DT, DAD.SOR_ID, DAD.CUST_ID, DAD.CUST_LINE_SEQ_ID ORDER BY DAD.TRANS_TM DESC) AS ROWNUM
		FROM ${UDMITVMDB}.DLY_ACTIVITY_DETAIL DAD
		INNER JOIN ${UDMITVMDB}.MARKET_HIST MH
			ON  DAD.SOR_ID = MH.SOR_ID
		  AND DAD.MKT_CD = MH.MKT_CD
			AND ((MH.EFF_DT <= DAD.TRANS_DT AND MH.EXP_DT IS NULL)	OR (MH.EFF_DT <= DAD.TRANS_DT AND MH.EXP_DT >= DAD.TRANS_DT ))
		WHERE DAD.TRANS_DT = CAST(${EQUIP_BDAY_DT} AS DATE)  -- <<<<< TRANS DATE HERE >>>>> --
			AND DAD.SOR_ID = 'V'
		  AND DAD.ACTIVITY_CD IN ('QH','ES','EP','4G')  --updated on 1170208
		  AND TRIM(DAD.CHANGE_REAS_CD) IN ('EU','NE','UP','U2','M1','M2','SD','S2','N5','AU','E2','AV','D2','EA','TA','SA','T2','S2','2D', 'UN')   -- updated on 07/15/2013, 02/28/2014, 01/05/2017
		  AND DAD.SLS_DIST_CHNL_TYPE_CD IN ('A','I','IN','R','V')
		  AND MH.MKT_PROD_CD <> 'W'
		  AND MH.INSTANCE_IND NOT IN ('LO','VH')
		QUALIFY ROWNUM=1
) DAD_TMP

INNER JOIN ${UDMITVMDB}.${CAL_TABLE} CAL
    ON  DAD_TMP.SOR_ID  = CAL.SOR_ID
    AND DAD_TMP.CUST_ID = CAL.CUST_ID
    AND DAD_TMP.CUST_LINE_SEQ_ID = CAL.CUST_LINE_SEQ_ID
    ${CAL_DATES} -- see export at top of script... this logic only used when running history
	
---- new on 06/11/2014 --  
--LEFT OUTER JOIN ${UDMITVMDB}.${PPLAN_TABLE} PPLAN         -- see export at top of script
LEFT OUTER JOIN ${PPLAN_TABLE} PPLAN         -- see export at top of script
 ON  DAD_TMP.SOR_ID = PPLAN.SOR_ID
 AND DAD_TMP.CUST_ID = PPLAN.CUST_ID
 AND DAD_TMP.CUST_LINE_SEQ_ID = PPLAN.CUST_LINE_SEQ_ID
 AND PPLAN.PPLAN_CD <> '99999'
 ${PPLAN_DATES}  -- see export at top of script... this logic only used when running history

LEFT OUTER JOIN ${UDMITVMDB}.DEVICE_DP_MAP DP
    ON  DAD_TMP.PROD_NM = DP.PROD_NM

LEFT OUTER JOIN ${UDMITVMDB}.CUST_ACCT_LINE_SEGMENT CALS
    ON  DAD_TMP.SOR_ID = CALS.SOR_ID
    AND DAD_TMP.CUST_ID = CALS.CUST_ID
    AND DAD_TMP.CUST_LINE_SEQ_ID = CALS.CUST_LINE_SEQ_ID
--    AND CALS.SEGMT_TYPE_CD = 'HRCHY_SEGMT'
    AND CALS.SEGMT_TYPE_CD = 'MGD_SEGMT'
    AND CAST(${EQUIP_BMTH_DT} as DATE ) + 2 >= CALS.EFF_DT
    AND CAST(${EQUIP_BMTH_DT} as DATE ) + 2 <= COALESCE (CALS.EXP_DT, CURRENT_DATE)
    
GROUP BY 1,2,3,8,9,10,11,12,13,14,15,16,17,18,19,20,23,32,33,35,36,37,38,39,40,
  61,63,72,74,75,77,78, 95, 119,134, 135, 136,137,138,139,140,141,142,143,144,160,161,169,170, 171,172,173,174,175,176,177,178,179,180,181,182,183,184
;

    .if errorcode != 0 then .quit errorcode

COLLECT STATISTICS ON ${UDMSTGDB}.EQUIP_SUM_FACT_TMP1_${EQUIP_RUN_TYPE} INDEX (CUST_ID, CUST_LINE_SEQ_ID);
    .if errorcode != 0 then .quit errorcode

COLLECT STATISTICS ON ${UDMSTGDB}.EQUIP_SUM_FACT_TMP1_${EQUIP_RUN_TYPE} INDEX (INVC_NUM,INVC_LINE_NUM, INVC_DT, STORE_NUM);
    .if errorcode != 0 then .quit errorcode

COLLECT STATISTICS ON ${UDMSTGDB}.EQUIP_SUM_FACT_TMP1_${EQUIP_RUN_TYPE} INDEX (PYMNT_DT, INVC_NUM, INVC_LINE_NUM, INVC_DT, STORE_NUM, CUST_ID, CUST_LINE_SEQ_ID);
    .if errorcode != 0 then .quit errorcode

/********************************************************************/
/*  Find Previous Device.
/********************************************************************/


CREATE VOLATILE TABLE PREV_DEVICE_LIST 
AS
(
SELECT  FACT.CUST_ID
       ,FACT.CUST_LINE_SEQ_ID
       ,COALESCE(FACT.DEVICE_PROD_NM, FACT.PROD_NM, 'NULL') AS CURR_PROD_NM
       ,COALESCE(FACT.EQP_DEVICE_ID, FACT.ESN_NUM, 'NULL') AS CURR_ESN_NUM
       ,CALDH.DEVICE_TYPE_CD
        ,(CASE WHEN CALDH.DEVICE_TYPE_CD LIKE ANY ('4G%','5G%') THEN CALDH.EQP_DEVICE_ID
              ELSE CALDH.ESN_NUM
        END) ESN_NUM
       ,(CASE WHEN CALDH.DEVICE_TYPE_CD LIKE ANY ('4G%','5G%') THEN CALDH.DEVICE_PROD_NM
              ELSE CALDH.PROD_NM
        END) PROD_NM
       ,ROW_NUMBER() OVER (PARTITION BY FACT.CUST_ID, FACT.CUST_LINE_SEQ_ID, CURR_PROD_NM, CURR_ESN_NUM
                           ORDER BY CALDH.EXP_DT DESC) AS ROWCNT
       
FROM ${UDMSTGDB}.EQUIP_SUM_FACT_TMP1_${EQUIP_RUN_TYPE} FACT
JOIN ${UDMITVMDB}.CUST_ACCT_LINE_DLY_HIST CALDH
  ON  FACT.CUST_ID          = CALDH.CUST_ID
  AND FACT.CUST_LINE_SEQ_ID = CALDH.CUST_LINE_SEQ_ID
  AND FACT.SOR_ID           = CALDH.SOR_ID
${PREV_DEVICE_DATES}  -- see logic at top of script
--  AND FACT.PYMNT_DT         > CALDH.EXP_DT
--  AND CALDH.EXP_DT          > ADD_MONTHS(CAST(${EQUIP_BMTH_DT} AS DATE), -20)

  AND ( 
        -- 3G to 4G 
        (COALESCE(FACT.ESN_NUM, FACT.PROD_NM) IS NOT NULL 
           AND CALDH.DEVICE_TYPE_CD LIKE ANY ('4G%','5G%'))
        
        -- 3G to 3G
     OR (COALESCE(FACT.ESN_NUM, FACT.PROD_NM) IS NOT NULL 
           AND (CALDH.DEVICE_TYPE_CD NOT LIKE ALL ('4G%','5G%') OR CALDH.DEVICE_TYPE_CD IS NULL)
           AND (  
                  (FACT.PROD_NM IS NOT NULL AND CALDH.PROD_NM IS NOT NULL 
                         AND FACT.PROD_NM <> CALDH.PROD_NM)
                         
               OR (COALESCE(FACT.PROD_NM, 'NULL') = COALESCE(CALDH.PROD_NM, 'NULL')
                         AND FACT.ESN_NUM IS NOT NULL AND CALDH.ESN_NUM IS NOT NULL
                         AND FACT.ESN_NUM <> CALDH.ESN_NUM)
               ))

--        -- 4G to 3G               
--     OR (COALESCE(FACT.EQP_DEVICE_ID, FACT.DEVICE_PROD_NM) IS NOT NULL 
--           AND (CALDH.DEVICE_TYPE_CD NOT LIKE ALL ('4G%','5G%') OR CALDH.DEVICE_TYPE_CD IS NULL))
--         
--        -- 4G to 4G 
--     OR (COALESCE(FACT.EQP_DEVICE_ID, FACT.DEVICE_PROD_NM) IS NOT NULL AND CALDH.DEVICE_TYPE_CD LIKE ANY ('4G%','5G%')
--           AND (
--                 (FACT.DEVICE_PROD_NM IS NOT NULL AND CALDH.DEVICE_PROD_NM IS NOT NULL 
--                         AND FACT.DEVICE_PROD_NM <> CALDH.DEVICE_PROD_NM)
--                         
--               OR (COALESCE(FACT.DEVICE_PROD_NM, 'NULL') = COALESCE(CALDH.DEVICE_PROD_NM, 'NULL')
--                         AND FACT.EQP_DEVICE_ID IS NOT NULL AND CALDH.EQP_DEVICE_ID IS NOT NULL
--                         AND FACT.EQP_DEVICE_ID <> CALDH.EQP_DEVICE_ID)
--               ))
     )

WHERE FACT.CUST_ID IS NOT NULL
AND   FACT.CUST_LINE_SEQ_ID IS NOT NULL
AND   FACT.DEVICE_TYPE_CD NOT LIKE ALL ('4G%','5G%')
QUALIFY ROWCNT=1
)
WITH DATA    
PRIMARY INDEX (CUST_ID, CUST_LINE_SEQ_ID)
ON COMMIT PRESERVE ROWS
;

    .if errorcode != 0 then .quit errorcode


DELETE FROM ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE};
    .if errorcode != 0 then .quit errorcode

INSERT  INTO ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE}
SELECT
   FACT.RPT_MTH                                            -- RPT_MTH
  ,FACT.PYMNT_DT                                           -- PYMNT_DT
  ,FACT.PYMNT_TM                                           -- PYMNT_TM
  ,FACT.INVC_NUM                                           -- INVC_NUM
  ,FACT.INVC_LINE_NUM                                      -- INVC_LINE_NUM
  ,FACT.INVC_DT                                            -- INVC_DT
  ,FACT.STORE_NUM                                          -- STORE_NUM
  ,FACT.TRANS_SLS_OUTLET_ID                                -- TRANS_SLS_OUTLET_ID
  ,FACT.ACT_SLS_DIST_CHNL_TYPE_CD                          -- ACT_SLS_DIST_CHNL_TYPE_CD
  ,FACT.SLS_DIST_CHNL_TYPE_CD                              -- SLS_DIST_CHNL_TYPE_CD
  ,FACT.ACQ_RET_IND                                        -- ACQ_RET_IND
  ,FACT.SOR_ID                                             -- SOR_ID
  ,FACT.CUST_ID                                            -- CUST_ID
  ,FACT.CUST_LINE_SEQ_ID                                   -- CUST_LINE_SEQ_ID
  ,FACT.ACCT_NUM                                           -- ACCT_NUM
  ,FACT.MTN                                                -- MTN
  ,FACT.CUST_TYPE_CD                                       -- CUST_TYPE_CD
  ,FACT.ESN_CHANGE_REAS_CD                                 -- ESN_CHANGE_REAS_CD
  ,FACT.ESN_NUM                                            -- ESN_NUM                        
  ,FACT.PROD_NM                                            -- PROD_NM                        
  ,FACT.EQP_DEVICE_ID                                      -- EQP_DEVICE_ID
  ,FACT.DEVICE_PROD_NM                                     -- DEVICE_PROD_NM
  ,FACT.DEVICE_TYPE_CD                                     -- DEVICE_TYPE_CD
  ,FACT.CNTRCT_TYPE                                        -- CNTRCT_TYPE
  ,FACT.IA_ITEM_CLASS_CD                                   -- IA_ITEM_CLASS_CD
  ,FACT.ITEM_CD                                            -- ITEM_CD
  ,FACT.OFFER_ID                                           -- OFFER_ID
  ,FACT.OFFER_NM                                           -- OFFER_NM
  ,FACT.DISCRETION_REAS_DESC                               -- DISCRETION_REAS_DESC
  ,FACT.PRIMARY_POS_RETURN_CD                              -- PRIMARY_POS_RETURN_CD
  ,FACT.SECONDARY_POS_RETURN_CD                            -- SECONDARY_POS_RETURN_CD
  ,FACT.PS_MKT_CD                                          -- PS_MKT_CD
  ,FACT.ORIG_SOR_ID                                        -- ORIG_SOR_ID
  ,FACT.PS_DEPT_NUM                                        -- PS_DEPT_NUM
  ,FACT.POS_MANAGED_IND                                    -- POS_MANAGED_IND
  ,FACT.CAL_MANAGED_IND                                    -- CAL_MANAGED_IND
  ,FACT.POS_PREPAID_IND                                    -- POS_PREPAID_IND
  ,FACT.CAL_PREPAID_IND                                    -- CAL_PREPAID_IND
  ,FACT.REV_GEN_IND                                        -- REV_GEN_IND
  ,FACT.MKT_CD                                             -- MKT_CD
  ,MH.REGION_CD                                            -- REGION_CD
  ,COALESCE (MH.AREA_CD, FACT.AREA_CD, 'NA') AS AREA_CD    -- AREA_CD
  ,PSTMP.REGION_DESC                                       -- TRANS_REGION_DESC
  ,PSTMP.AREA_DESC                                         -- TRANS_AREA_DESC
  ,CASE WHEN FACT.DEVICE_TYPE_CD LIKE ANY ('4G%','5G%') OR PDL.DEVICE_TYPE_CD LIKE ANY ('4G%','5G%') THEN NULL
        ELSE PDL.ESN_NUM
   END ESN_NUM_PREV
  ,CASE WHEN FACT.DEVICE_TYPE_CD LIKE ANY ('4G%','5G%') OR PDL.DEVICE_TYPE_CD LIKE ANY ('4G%','5G%') THEN NULL
        ELSE PDL.PROD_NM
   END PROD_NM_PREV
  ,CASE WHEN FACT.DEVICE_TYPE_CD LIKE ANY ('4G%','5G%') OR PDL.DEVICE_TYPE_CD IS NULL OR PDL.DEVICE_TYPE_CD NOT LIKE ALL ('4G%','5G%') THEN NULL
        ELSE PDL.ESN_NUM
   END EQP_DEVICE_ID_PREV
  ,CASE WHEN FACT.DEVICE_TYPE_CD LIKE ANY ('4G%','5G%') OR PDL.DEVICE_TYPE_CD IS NULL OR PDL.DEVICE_TYPE_CD NOT LIKE ALL ('4G%','5G%') THEN NULL
        ELSE PDL.PROD_NM
   END DEVICE_PROD_NM_PREV
  ,CASE WHEN FACT.DEVICE_TYPE_CD LIKE ANY ('4G%','5G%') THEN NULL
        ELSE PDL.DEVICE_TYPE_CD 
   END DEVICE_TYPE_CD_PREV
  ,SUM_FACT.ROLLUP_CD                                      -- ROLLUP_CD
  ,SUM_FACT.MNC_IND                                        -- MNC_IND
  ,SUM_FACT.F1K_IND                                        -- F1K_IND
  ,SUM_FACT.RLTD_ACCT_ID                                   -- RLTD_ACCT_ID
  ,CE.ECPD_PROFILE_ID                                      -- ECPD_PROFILE_ID     --Added on 01/15/2013  
--  ,SUM_FACT.ECPD_PROFILE_ID                                -- ECPD_PROFILE_ID   --Commented on 01/15/2013  
  ,SUM_FACT.VZW_VALUE                                      -- VZW_VALUE
  ,SUM_FACT.DUNS_LOC_NUM                                   -- DUNS_LOC_NUM
  ,SUM_FACT.LIFE_STAGE_SEGMT                               -- LIFE_STAGE_SEGMT
  ,SUM_FACT.ETHNICITY_SEGMT                                -- ETHNICITY_SEGMT
  ,SUM_FACT.HRCHY_SEGMT                                    -- HRCHY_SEGMT
  ,SUM_FACT.VERTICAL                                       -- VERTICAL
  ,FACT.TRANS_TYPE_DESC                                    -- TRANS_TYPE_DESC
  ,FACT.NRP_PRC_AMT                                        -- NRP_PRC_AMT
  ,FACT.SOLD_QTY                                           -- SOLD_QTY
  ,FACT.ITEM_DISC_AMT                                      -- ITEM_DISC_AMT
  ,FACT.ITEM_PRICE_AMT                                     -- ITEM_PRICE_AMT
  ,FACT.ITEM_COST_AMT                                      -- ITEM_COST_AMT
  ,FACT.ALLOC_AMT                                          -- ALLOC_AMT
  ,FACT.DEALLOC_AMT                                        -- DEALLOC_AMT
  ,FACT.MGR_DISC_AMT                                       -- MGR_DISC_AMT
  ,FACT.REP_DISC_AMT                                       -- REP_DISC_AMT
  ,FACT.INSTANT_REBATE_AMT                                 -- INSTANT_REBATE_AMT
  ,FACT.INSERT_DT                                          -- INSERT_DT
  ,FACT.UPDATE_DT                                          -- UPDATE_DT
  ,FACT.ROW_TYPE_ID                                        -- ROW_TYPE_ID
  ,FACT.DUPLICATE_IND                                      -- DUPLICATE_IND
  ,FACT.GROSS_DISCOUNT                                     -- GROSS_DISCOUNT
  ,FACT.RETURN_QTY                                         -- RETURN_QTY
  ,FACT.SALES_QTY                                          -- SALES_QTY
  ,FACT.NET_SALES                                          -- NET_SALES

  ,FACT.FIN_UPG_FLAG                                       -- FIN_UPG_FLAG
  ,FACT.FIN_TOT_FLAG                                       -- FIN_TOT_FLAG
  ,FACT.BASE_PRC_TYPE_CD                                   -- BASE_PRC_TYPE_CD
  ,FACT.DEPLETION_STORE_NUM                                -- DEPLETION_STORE_NUM
  ,FACT.DISC_REAS_CD                                       -- DISC_REAS_CD
  ,FACT.EMP_ID                                             -- EMP_ID
  ,FACT.FULFILLMENT_IND                                    -- FULFILLMENT_IND
  ,FACT.IA_ITEM_CATEGORY_CD                                -- IA_ITEM_CATEGORY_CD
  ,FACT.IA_ITEM_GROUP_CD                                   -- IA_ITEM_GROUP_CD
  ,FACT.IA_UNBUNDLE_MULTIPLIER                             -- IA_UNBUNDLE_MULTIPLIER
  ,FACT.ITEM_TYPE                                          -- ITEM_TYPE
  ,FACT.NETACE_RETURN_CD                                   -- NETACE_RETURN_CD
  ,FACT.ORDER_TYPE                                         -- ORDER_TYPE
  ,FACT.ORIG_INVC_DT                                       -- ORIG_INVC_DT  (always null)
  ,FACT.POS_ORIG_SLS_PRSN_ID                               -- POS_ORIG_SLS_PRSN_ID  (always null)
  ,FACT.PS_REGION_CD                                       -- PS_REGION_CD
  ,FACT.REBATE_IND                                         -- REBATE_IND
  ,FACT.REFUND_APPLIED_IND                                 -- REFUND_APPLIED_IND
  ,FACT.RETURN_EXCH_TYPE                                   -- RETURN_EXCH_TYPE
  ,FACT.SIM_IND                                            -- SIM_IND
  ,FACT.SLS_PRSN_ID                                        -- SLS_PRSN_ID
  ,FACT.SLS_TYPE                                           -- SLS_TYPE
  ,FACT.SR_RETURN_IND                                      -- SR_RETURN_IND
  ,FACT.USER_ID                                            -- USER_ID
  ,FACT.POS_SRC_ID                                         -- POS_SRC_ID
  ,FACT.LINE_ITEM_SLS_PRSN_ID                              -- LINE_ITEM_SLS_PRSN_ID
  ,FACT.DISCRETION_REAS_CD                                 -- DISCRETION_REAS_CD
  ,FACT.GIFT_CARD_NUM                                      -- GIFT_CARD_NUM 
  
  ,FACT.UNIT_ONLY_IND                                      -- UNIT_ONLY_IND
  ,FACT.RETURN_INVC_NUM                                    -- RETURN_INVC_NUM
  ,FACT.RETURN_INVC_LINE_NUM                               -- RETURN_INVC_LINE_NUM
  
  ,FACT.ORIG_INVC_NUM                                      -- ORIG_INVC_NUM
  ,FACT.ORIG_STORE_NUM                                     -- ORIG_STORE_NUM
  ,FACT.ORIG_SLS_OUTLET_ID                                 -- ORIG_SLS_OUTLET_ID
  ,FACT.IA_ITEM_SUBCATEGORY_CD                             -- IA_ITEM_SUBCATEGORY_CD
  
   ,FACT.FULL_PRICE_AFTER_DISC_IND                         -- FULL_PRICE_AFTER_DISC_IND
   ,FACT.FULL_PRICE_B4_DISC_IND                            -- FULL_PRICE_B4_DISC_IND
   ,FACT.DISCOUNT_CD                                       -- DISCOUNT_CD
   ,FACT.ADJ_PS_DEPT_NUM                                   -- ADJ_PS_DEPT_NUM
   ,FACT.CNTRCT_TENURE_SUM                                 -- CNTRCT_TENURE_SUM
   ,FACT.ALLTEL_IND	                                   -- ALLTEL_IND
   
   ,FACT.CLNR_ELIGIBILITY_IND                              -- CLNR_ELIGIBILITY_IND
   ,FACT.CUST_DEVICE_SRC                                   -- CUST_DEVICE_SRC
   
   ,FACT.ALT_UPGRADE_REAS_CD                               -- ALT_UPGRADE_REAS_CD
   ,FACT.CNTRCT_MTN                                        -- CNTRCT_MTN
   ,FACT.CNTRCT_CUST_ID                                    -- CNTRCT_CUST_ID
   ,FACT.CNTRCT_CUST_LINE_SEQ_ID                           -- CNTRCT_CUST_LINE_SEQ_ID
   ,FACT.CNTRCT_ACCT_NUM                                   -- CNTRCT_ACCT_NUM
   
   ,FACT.CREDIT_APP_NUM                                    -- CREDIT_APP_NUM
   
   ,FACT.EDGE_INTERESTED_IND                               -- EDGE_INTERESTED_IND
   ,FACT.EDGE_QUALIFIED_IND                                -- EDGE_QUALIFIED_IND
   ,FACT.EDW_EDGE_QUALIFIED_IND                            -- EDW_EDGE_QUALIFIED_IND
   ,FACT.PYMNT_TENDER_TYPE_CD                              -- PYMNT_TENDER_TYPE_CD
   
   ,FACT.HR_EMP_ID                                         -- HR_EMP_ID
   ,FACT.CLIENT_ID                                         -- CLIENT_ID
   
   ,FACT.LOAN_TYPE_CD
   
   ,FACT.CREDIT_LIMIT_AMT                                  -- CREDIT_LIMIT_AMT
   
   ,FACT.CURR_CONTRACT_TERM                                -- CURR_CONTRACT_TERM
   ,FACT.PREV_CONTRACT_TERM                                -- PREV_CONTRACT_TERM
   
   ,FACT.LINE_TYPE_CD                                      -- LINE_TYPE_CD
   ,FACT.VSN_CUST_TYPE_CD                                  -- VSN_CUST_TYPE_CD
   ,FACT.PPLAN_CD                                          -- PPLAN_CD
   ,FACT.PPLAN_MKT_CD                                      -- PPLAN_MKT_CD 

   ,FACT.CONV_IND                                          -- CONV_IND
   ,FACT.TRADEIN_IND                                       -- TRADEIN_IND
   
   ,FACT.PPLAN_CD_PREV                                     -- PPLAN_CD_PREV    	
   ,FACT.PPLAN_MKT_CD_PREV                                 -- PPLAN_MKT_CD_PREV
   ,FACT.RPT_PPLAN_CD                                      -- RPT_PPLAN_CD      
   ,FACT.RPT_PPLAN_CD_PREV                                 -- RPT_PPLAN_CD_PREV
   
   ,FACT.RISK_PROFILE_CD                                   -- RISK_PROFILE_CD
   ,FACT.DOWN_PYMNT_PCT                                    -- DOWN_PYMNT_PCT
   ,FACT.EDW_EDGE_QUALIFIED_SRC_DESC                       -- EDW_EDGE_QUALIFIED_SRC_DESC
   
   ,FACT.INVENTORY_ADJ_IND                                 -- INVENTORY_ADJ_IND
   
	,FACT.EQP_CLASS_DESC
	,FACT.EQP_PROGRAM_CD
	,FACT.EQP_GRP_DESC
	,FACT.EQP_TYPE_DESC
	,FACT.EQP_CTGRY_DESC
	,FACT.EQP_DESC
	,FACT.UNBUNDLE_MULTIPLIER
	,FACT.TRANS_TS
	,FACT.INDIR_CHNL_FIN_IND	
	,FACT.BYOD_SIM_ACT_IND
	,FACT.COLD_STOCK_IND
	,FACT.NEW_IN_BOX_IND
	,FACT.VZ2_SEGMT_CD									-- Added 1190401
	,FACT.POS_VZ2_SEGMT_CD								-- Added 1190401
	,FACT.POS_ECPD_PROFILE_ID							-- Added 1190401
	,FACT.POS_VSN_CUST_TYPE_CD							-- Added 1190401
	,FACT.EOM_CUST_ID   								-- Added 1190401
	,FACT.EOM_CUST_LINE_SEQ_ID  						-- Added 1190401
	,FACT.SDR_ELIG                                      -- Added 1200110
    --,COALESCE((case when FACT.ERP_DIST_CHNL_CD ='0000' then NULL else FACT.ERP_DIST_CHNL_CD end ) ,EDCM2.ERP_DIST_CHNL_CD)  --Modified for AI-33637    '0000' to '00'                             -- Added 1210614 , Added 1210817
	,COALESCE((case when FACT.ERP_DIST_CHNL_CD ='00' then NULL else FACT.ERP_DIST_CHNL_CD end ) ,EDCM2.ERP_DIST_CHNL_CD) 
	,FACT.ERP_COST_CTR_CD                                -- Added 1210614
	,FACT.MYBIZ_CHNL_DESC                                -- Added 1210614
	,FACT.ERP_CUST_SUB_SEGMT_CD                          -- Added 1210811
	,FACT.ERP_LOC_CD                                     -- Added 1210811
	,FACT.POS_ERP_CUST_SUB_SEGMT_CD                      -- Added 1210811
	,EDCM.ERP_DIST_CHNL_CD                         --ACT_ERP_DIST_CHNL_CD  -- Added 1210811
	,FACT.PS_MKT_CD                                          -- ERP_MKT_CD  -- Added 1210811
	,FACT.QUOTE_ID                                 -- QUOTE_ID  180                 -- Added 1210920
	,FACT.GIFT_IND                                   ---GIFT_IND ---Added 1211118
	,FACT.SIM_TYPE_CD                            ---Added 1220425
	,FACT.BGID_SOURCE                                    	-- Added 1230810
	,FACT.BGID												-- Added 1230810


FROM    ${UDMSTGDB}.EQUIP_SUM_FACT_TMP1_${EQUIP_RUN_TYPE} FACT

LEFT OUTER JOIN ${UDMITVMDB}.MARKET_HIST   MH  -- activation mkt from CAL
  ON  FACT.SOR_ID = MH.SOR_ID
  AND FACT.MKT_CD = MH.MKT_CD
  AND FACT.PYMNT_DT >= MH.EFF_DT
  AND FACT.PYMNT_DT <= COALESCE (MH.EXP_DT, CURRENT_DATE)

/* trans region and area -- begin logic */

LEFT OUTER JOIN (SELECT SOR_ID, SLS_OUTLET_ID, SLS_OUTLET_MKT_CD, EFF_DT, EXP_DT
				FROM ${UDMITVMDB}.OUTLET_HIST) TOH
    ON    FACT.SOR_ID = TOH.SOR_ID
    AND   FACT.TRANS_SLS_OUTLET_ID = TOH.SLS_OUTLET_ID
    AND   FACT.PYMNT_DT >= TOH.EFF_DT
    AND   FACT.PYMNT_DT <=  COALESCE (TOH.EXP_DT, CURRENT_DATE)

LEFT OUTER JOIN (SELECT SOR_ID, MKT_CD, EFF_DT, EXP_DT, PS_MKT_CD, REGION_CD  -- added region_cd
    		FROM ${UDMITVMDB}.MARKET_HIST) TMKT
    ON    TOH.SOR_ID = TMKT.SOR_ID
    AND   TOH.SLS_OUTLET_MKT_CD = TMKT.MKT_CD
    AND   FACT.PYMNT_DT  >= TMKT.EFF_DT
    AND   FACT.PYMNT_DT  <=  COALESCE (TMKT.EXP_DT, CURRENT_DATE)

LEFT OUTER JOIN PS_MKT_TMP_${EQUIP_RUN_TYPE} PSTMP
  ON TMKT.PS_MKT_CD = PSTMP.PS_MKT_CD

/* trans region and area -- end logic */

LEFT OUTER JOIN PREV_DEVICE_LIST PDL
  ON  FACT.CUST_ID = PDL.CUST_ID
  AND FACT.CUST_LINE_SEQ_ID = PDL.CUST_LINE_SEQ_ID
  AND FACT.DEVICE_TYPE_CD NOT LIKE ALL ('4G%','5G%')  
  AND COALESCE(FACT.DEVICE_PROD_NM, FACT.PROD_NM, 'NULL') = PDL.CURR_PROD_NM
  AND COALESCE(FACT.EQP_DEVICE_ID, FACT.ESN_NUM, 'NULL') = PDL.CURR_ESN_NUM
  
LEFT OUTER JOIN 
(SELECT
   ESF.CUST_ID
  ,ESF.CUST_LINE_SEQ_ID
  ,ESF.SOR_ID
  ,SF.ROLLUP_CD                -- ,FACT.ROLLUP_CD
  ,SF.MNC_IND                  -- ,FACT.MNC_IND
  ,SF.F1K_IND                  -- ,FACT.F1K_IND
  ,SF.RLTD_ACCT_ID             -- ,FACT.RLTD_ACCT_ID
  ,SF.ECPD_PROFILE_ID          -- ,FACT.ECPD_PROFILE_ID
  ,SF.VZW_VALUE                -- ,FACT.VZW_VALUE
  ,SF.DUNS_LOC_NUM             -- ,FACT.DUNS_LOC_NUM
  ,SF.LIFE_STAGE_SEGMT         -- ,FACT.LIFE_STAGE_SEGMT
  ,SF.ETHNICITY_SEGMT          -- ,FACT.ETHNICITY_SEGMT
  --,SF.HRCHY_SEGMT              -- ,FACT.HRCHY_SEGMT
  ,SF.MGD_SEGMT AS HRCHY_SEGMT -- ,FACT.HRCHY_SEGMT                 --Updated on 1170124
  ,SF.VERTICAL                 -- ,FACT.VERTICAL
  ,ROW_NUMBER() OVER (partition by ESF.CUST_ID, ESF.CUST_LINE_SEQ_ID 
                      order by SF.ACCESS_AMT desc, SF.DATA_ACCESS_AMT desc, SF.VOICE_ACCESS_AMT desc) as ROWCNT
  FROM ${UDMITVMDB}.SUBS_SUM_FACT SF
  JOIN ${UDMSTGDB}.EQUIP_SUM_FACT_TMP1_${EQUIP_RUN_TYPE} ESF
    ON  ESF.SOR_ID  = SF.SOR_ID
    AND ESF.CUST_ID = SF.CUST_ID
    AND ESF.CUST_LINE_SEQ_ID = SF.CUST_LINE_SEQ_ID
    AND SF.RPT_MTH = CAST (${EQUIP_BMTH_DT} as DATE )
  QUALIFY ROWCNT=1
) SUM_FACT  
  ON  FACT.SOR_ID  = SUM_FACT.SOR_ID
  AND FACT.CUST_ID = SUM_FACT.CUST_ID
  AND FACT.CUST_LINE_SEQ_ID = SUM_FACT.CUST_LINE_SEQ_ID
  
  
--Added on 01/15/2013  
  LEFT OUTER JOIN ${UDMITVMDB}.CUST_ECPD CE
  ON FACT.CUST_ID = CE.CUST_ID
  AND FACT.SOR_ID = CE.SOR_ID
  AND FACT.PYMNT_DT BETWEEN CE.ECPD_EFF_DT AND COALESCE(ECPD_TERM_DT, DATE '9999-12-31')		--Added 1190401
  --AND CE.ECPD_TERM_DT IS NULL   --Updated 1190401

LEFT OUTER JOIN NTL_PRD_ALLVM.ERP_DISTRIBUTION_CHANNEL_MAP_V EDCM         -- Added 1210811
ON FACT.ACT_SLS_DIST_CHNL_TYPE_CD = EDCM.SLS_DIST_CHNL_TYPE_CD
AND FACT.SOR_ID=EDCM.SOR_ID

LEFT OUTER JOIN NTL_PRD_ALLVM.ERP_DISTRIBUTION_CHANNEL_MAP_V EDCM2        -- Added 1210811
ON EDCM2.SLS_DIST_CHNL_TYPE_CD=FACT.SLS_DIST_CHNL_TYPE_CD
AND EDCM2.SOR_ID=FACT.SOR_ID
--AND FACT.ERP_DIST_CHNL_CD IS NULL

;

    .if errorcode != 0 then .quit errorcode

COLLECT STATISTICS ON ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE} COLUMN (PYMNT_DT, INVC_NUM, INVC_LINE_NUM, INVC_DT, STORE_NUM, CUST_ID, CUST_LINE_SEQ_ID);
    .if errorcode != 0 then .quit errorcode


/********************************************************************/
/* Mark duplicate transactions that also appear in POS
/********************************************************************/

UPDATE ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE} 
FROM 
(
	SELECT DISTINCT A.CUST_ID, A.CUST_LINE_SEQ_ID, A.ESN_NUM, A.SALES_QTY 
  FROM ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE}  A
  INNER JOIN ${UDMDB}.EQUIP_SUM_FACT B
    ON  A.CUST_ID          = B.CUST_ID
    AND A.CUST_LINE_SEQ_ID = B.CUST_LINE_SEQ_ID
    AND A.ESN_NUM          = B.ESN_NUM
    AND A.SALES_QTY        = B.SALES_QTY
  WHERE A.SALES_QTY > 0
    AND B.RPT_MTH  >= ADD_MONTHS( CAST (${EQUIP_BMTH_DT} AS DATE) , -1)
    AND B.PYMNT_DT >= CAST (${EQUIP_BDAY_DT} AS DATE) - 31
  	AND B.PYMNT_DT <= ${EQUIP_BDAY_DT}
  	AND B.ROW_TYPE_ID = 'D'
  	AND B.PS_DEPT_NUM IN ('2960','3020','INDR')
    
	/*AND B.IA_ITEM_CLASS_CD IN (
     'PHONE - NEW'
    ,'PHONE - CPO'
    ,'PHONE - FRU'
    ,'PHONE - OCPO'
    ,'DATA - NEW'
    ,'DATA - CPO'
    ,'DATA - FRU'
    ,'DATA - OCPO')
	*/
	
	AND (B.EQP_CLASS_DESC = 'Wireless Devices' AND COALESCE(B.EQP_PROGRAM_CD,'') <>'LOAN')
  	AND B.SALES_QTY > 0
) TMP_ESF
SET DUPLICATE_IND = 'Y'
WHERE ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE}.CUST_ID          = TMP_ESF.CUST_ID
AND   ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE}.CUST_LINE_SEQ_ID = TMP_ESF.CUST_LINE_SEQ_ID
AND   ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE}.ESN_NUM          = TMP_ESF.ESN_NUM
AND   ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE}.SALES_QTY        = TMP_ESF.SALES_QTY
;

    .if errorcode != 0 then .quit errorcode


UPDATE ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE} 
FROM 
(
	SELECT DISTINCT A.CUST_ID, A.CUST_LINE_SEQ_ID, A.ESN_NUM, A.RETURN_QTY 
  FROM ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE}  A
  INNER JOIN ${UDMDB}.EQUIP_SUM_FACT B
    ON  A.CUST_ID          = B.CUST_ID
    AND A.CUST_LINE_SEQ_ID = B.CUST_LINE_SEQ_ID
    AND A.ESN_NUM          = B.ESN_NUM
    AND A.RETURN_QTY       = B.RETURN_QTY
  WHERE A.RETURN_QTY > 0
    AND B.RPT_MTH  >= ADD_MONTHS( CAST (${EQUIP_BMTH_DT} AS DATE) , -1)
    AND B.PYMNT_DT >= CAST (${EQUIP_BDAY_DT} AS DATE) - 31
  	AND B.PYMNT_DT <= ${EQUIP_BDAY_DT}
  	AND B.ROW_TYPE_ID = 'D'
  	AND B.PS_DEPT_NUM IN ('2960','3020','INDR')
    
	/*AND B.IA_ITEM_CLASS_CD IN (
     'PHONE - NEW'
    ,'PHONE - CPO'
    ,'PHONE - FRU'
    ,'PHONE - OCPO'
    ,'DATA - NEW'
    ,'DATA - CPO'
    ,'DATA - FRU'
    ,'DATA - OCPO')
	*/
	
	AND (B.EQP_CLASS_DESC = 'Wireless Devices' AND COALESCE(B.EQP_PROGRAM_CD,'') <>'LOAN')
  	AND B.RETURN_QTY > 0
) TMP_ESF
SET DUPLICATE_IND = 'Y'
WHERE ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE}.CUST_ID          = TMP_ESF.CUST_ID
AND   ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE}.CUST_LINE_SEQ_ID = TMP_ESF.CUST_LINE_SEQ_ID
AND   ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE}.ESN_NUM          = TMP_ESF.ESN_NUM
AND   ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE}.RETURN_QTY       = TMP_ESF.RETURN_QTY
;

    .if errorcode != 0 then .quit errorcode


/********************************************************************/
/* Load into table
/********************************************************************/

DELETE FROM ${UDMDB}.EQUIP_SUM_FACT
WHERE RPT_MTH = ${EQUIP_BMTH_DT}
AND PYMNT_DT = ${EQUIP_BDAY_DT}
AND ROW_TYPE_ID IN ('IUG','IUP');

    .if errorcode != 0 then .quit errorcode

INSERT  INTO ${UDMDB}.EQUIP_SUM_FACT 
(RPT_MTH ,
      PYMNT_DT ,
      PYMNT_TM ,
      INVC_NUM ,
      INVC_LINE_NUM ,
      INVC_DT,
      STORE_NUM ,
      TRANS_SLS_OUTLET_ID,
      ACT_SLS_DIST_CHNL_TYPE_CD,
      SLS_DIST_CHNL_TYPE_CD,
      ACQ_RET_IND,
      SOR_ID,
      CUST_ID,
      CUST_LINE_SEQ_ID,
      ACCT_NUM ,
      MTN ,
      CUST_TYPE_CD,
      ESN_CHANGE_REAS_CD ,
      ESN_NUM ,
      PROD_NM ,
      EQP_DEVICE_ID,
      DEVICE_PROD_NM,
      DEVICE_TYPE_CD ,
      CNTRCT_TYPE,
      IA_ITEM_CLASS_CD ,
      ITEM_CD,
      OFFER_ID,
      OFFER_NM,
      DISCRETION_REAS_DESC ,
      PRIMARY_POS_RETURN_CD,
      SECONDARY_POS_RETURN_CD,
      PS_MKT_CD,
      ORIG_SOR_ID,
      PS_DEPT_NUM,
      POS_MANAGED_IND ,
      CAL_MANAGED_IND ,
      POS_PREPAID_IND ,
      CAL_PREPAID_IND,
      REV_GEN_IND ,
      MKT_CD ,
      REGION_CD,
      AREA_CD ,
      TRANS_REGION_DESC,
      TRANS_AREA_DESC,
      ESN_NUM_PREV,
      PROD_NM_PREV ,
      EQP_DEVICE_ID_PREV,
      DEVICE_PROD_NM_PREV,
      DEVICE_TYPE_CD_PREV ,
      ROLLUP_CD,
      MNC_IND,
      F1K_IND,
      RLTD_ACCT_ID,
      ECPD_PROFILE_ID,
      VZW_VALUE,
      DUNS_LOC_NUM,
      LIFE_STAGE_SEGMT,
      ETHNICITY_SEGMT,
      HRCHY_SEGMT,
      VERTICAL ,
      TRANS_TYPE_DESC,
      NRP_PRC_AMT ,
      ITEM_DISC_AMT,
      ITEM_PRICE_AMT,
      ITEM_COST_AMT ,
      ALLOC_AMT,
      DEALLOC_AMT ,
      MGR_DISC_AMT ,
      REP_DISC_AMT ,
      INSTANT_REBATE_AMT,
      INSERT_DT ,
      UPDATE_DT ,
      ROW_TYPE_ID ,
      DUPLICATE_IND,
      GROSS_DISCOUNT ,
      RETURN_QTY ,
      SALES_QTY ,
      NET_SALES ,
      FIN_UPG_FLAG,
      FIN_TOT_FLAG,
      BASE_PRC_TYPE_CD ,
      DEPLETION_STORE_NUM,
      DISC_REAS_CD ,
      EMP_ID ,
      FULFILLMENT_IND,
      IA_ITEM_CATEGORY_CD,
      IA_ITEM_GROUP_CD ,
      IA_UNBUNDLE_MULTIPLIER,
      ITEM_TYPE ,
      NETACE_RETURN_CD,
      ORDER_TYPE ,
      ORIG_INVC_DT,
      POS_ORIG_SLS_PRSN_ID ,
      PS_REGION_CD ,
      REBATE_IND,
      REFUND_APPLIED_IND,
      RETURN_EXCH_TYPE ,
      SIM_IND ,
      SLS_PRSN_ID ,
      SLS_TYPE ,
      SR_RETURN_IND,
      USER_ID ,
      POS_SRC_ID,
      LINE_ITEM_SLS_PRSN_ID,
      DISCRETION_REAS_CD ,
      GIFT_CARD_NUM ,
      UNIT_ONLY_IND ,
      RETURN_INVC_NUM ,
      RETURN_INVC_LINE_NUM ,
      ORIG_INVC_NUM ,
      ORIG_STORE_NUM ,
      ORIG_SLS_OUTLET_ID ,
      IA_ITEM_SUBCATEGORY_CD,
      FULL_PRICE_AFTER_DISC_IND,
      FULL_PRICE_B4_DISC_IND ,
      DISCOUNT_CD ,
      ADJ_PS_DEPT_NUM,
      CNTRCT_TENURE_SUM,
      ALLTEL_IND ,
      CLNR_ELIGIBILITY_IND,
      CUST_DEVICE_SRC ,
      ALT_UPGRADE_REAS_CD,
      CNTRCT_MTN ,
      CNTRCT_CUST_ID,
      CNTRCT_CUST_LINE_SEQ_ID,
      CNTRCT_ACCT_NUM ,
      CREDIT_APP_NUM ,
      EDGE_INTERESTED_IND,
      EDGE_QUALIFIED_IND ,
      EDW_EDGE_QUALIFIED_IND,
      PYMNT_TENDER_TYPE_CD ,
      HR_EMP_ID ,
      CLIENT_ID,
      LOAN_TYPE_CD ,
      CREDIT_LIMIT_AMT,
      CURR_CONTRACT_TERM ,
      PREV_CONTRACT_TERM ,
      LINE_TYPE_CD,
      VSN_CUST_TYPE_CD,
      PPLAN_CD ,
      PPLAN_MKT_CD,
      CONV_IND ,
      TRADEIN_IND,
      PPLAN_CD_PREV,
      PPLAN_MKT_CD_PREV ,
      RPT_PPLAN_CD ,
      RPT_PPLAN_CD_PREV,
      RISK_PROFILE_CD,
      DOWN_PYMNT_PCT ,
      EDW_EDGE_QUALIFIED_SRC_DESC ,
      INVENTORY_ADJ_IND ,
      EQP_CLASS_DESC ,
      EQP_PROGRAM_CD,
      EQP_GRP_DESC ,
      EQP_TYPE_DESC,
      EQP_CTGRY_DESC,
      EQP_DESC ,
      UNBUNDLE_MULTIPLIER ,
      TRANS_TS,
      INDIR_CHNL_FIN_IND ,
      BYOD_SIM_ACT_IND ,
      COLD_STOCK_IND ,
      NEW_IN_BOX_IND ,
      VZ2_SEGMT_CD ,
      POS_VZ2_SEGMT_CD,
      POS_ECPD_PROFILE_ID ,
      POS_VSN_CUST_TYPE_CD ,
      EOM_CUST_ID,
      EOM_CUST_LINE_SEQ_ID ,
      SDR_ELIG ,
      ERP_DIST_CHNL_CD ,
      ERP_COST_CTR_CD ,
      MYBIZ_CHNL_DESC ,
      ERP_CUST_SUB_SEGMT_CD,
      ERP_LOC_CD ,
      POS_ERP_CUST_SUB_SEGMT_CD,
      ACT_ERP_DIST_CHNL_CD ,
      ERP_MKT_CD ,
      QUOTE_ID ,
	  GIFT_IND,
	  SIM_TYPE_CD,
	  BGID_SOURCE,
	  BGID) 
SELECT
   FACT.RPT_MTH
  ,FACT.PYMNT_DT
  ,FACT.PYMNT_TM
  ,FACT.INVC_NUM
  ,FACT.INVC_LINE_NUM
  ,FACT.INVC_DT
  ,FACT.STORE_NUM
  ,FACT.TRANS_SLS_OUTLET_ID
  ,FACT.ACT_SLS_DIST_CHNL_TYPE_CD
  ,FACT.SLS_DIST_CHNL_TYPE_CD
  ,FACT.ACQ_RET_IND
  ,FACT.SOR_ID
  ,FACT.CUST_ID
  ,FACT.CUST_LINE_SEQ_ID
  ,FACT.ACCT_NUM
  ,FACT.MTN
  ,FACT.CUST_TYPE_CD
  ,FACT.ESN_CHANGE_REAS_CD
  ,FACT.ESN_NUM
  ,FACT.PROD_NM
  ,FACT.EQP_DEVICE_ID
  ,FACT.DEVICE_PROD_NM
  ,FACT.DEVICE_TYPE_CD
  ,FACT.CNTRCT_TYPE
  ,FACT.IA_ITEM_CLASS_CD
  ,FACT.ITEM_CD
  ,FACT.OFFER_ID
  ,FACT.OFFER_NM
  ,FACT.DISCRETION_REAS_DESC
  ,FACT.PRIMARY_POS_RETURN_CD
  ,FACT.SECONDARY_POS_RETURN_CD
  ,FACT.PS_MKT_CD
  ,FACT.ORIG_SOR_ID
  ,FACT.PS_DEPT_NUM
  ,FACT.POS_MANAGED_IND
  ,FACT.CAL_MANAGED_IND
  ,FACT.POS_PREPAID_IND
  ,FACT.CAL_PREPAID_IND
  ,FACT.REV_GEN_IND
  ,FACT.MKT_CD    -- activation mkt
  ,FACT.REGION_CD -- activation region
  ,FACT.AREA_CD   -- activation area code
  ,FACT.TRANS_REGION_DESC
  ,FACT.TRANS_AREA_DESC
  ,FACT.ESN_NUM_PREV
  ,FACT.PROD_NM_PREV
  ,FACT.EQP_DEVICE_ID_PREV
  ,FACT.DEVICE_PROD_NM_PREV
  ,FACT.DEVICE_TYPE_CD_PREV
  ,FACT.ROLLUP_CD
  ,FACT.MNC_IND
  ,FACT.F1K_IND
  ,FACT.RLTD_ACCT_ID
  ,FACT.ECPD_PROFILE_ID
  ,FACT.VZW_VALUE
  ,FACT.DUNS_LOC_NUM
  ,FACT.LIFE_STAGE_SEGMT
  ,FACT.ETHNICITY_SEGMT
  ,FACT.HRCHY_SEGMT
  ,FACT.VERTICAL
  ,FACT.TRANS_TYPE_DESC
  ,FACT.NRP_PRC_AMT
  ,FACT.ITEM_DISC_AMT
  ,FACT.ITEM_PRICE_AMT
  ,FACT.ITEM_COST_AMT
  ,FACT.ALLOC_AMT
  ,FACT.DEALLOC_AMT
  ,FACT.MGR_DISC_AMT
  ,FACT.REP_DISC_AMT
  ,FACT.INSTANT_REBATE_AMT
  ,FACT.INSERT_DT
  ,FACT.UPDATE_DT
  ,FACT.ROW_TYPE_ID
  ,FACT.DUPLICATE_IND
  ,FACT.GROSS_DISCOUNT
  ,FACT.RETURN_QTY
  ,FACT.SALES_QTY
  ,FACT.NET_SALES

  ,FACT.FIN_UPG_FLAG                                        -- FIN_UPG_FLAG
  ,FACT.FIN_TOT_FLAG                                        -- FIN_TOT_FLAG
  ,FACT.BASE_PRC_TYPE_CD                                    -- BASE_PRC_TYPE_CD
  ,FACT.DEPLETION_STORE_NUM                                 -- DEPLETION_STORE_NUM
  ,FACT.DISC_REAS_CD                                        -- DISC_REAS_CD
  ,FACT.EMP_ID                                              -- EMP_ID
  ,FACT.FULFILLMENT_IND                                     -- FULFILLMENT_IND
  ,FACT.IA_ITEM_CATEGORY_CD                                 -- IA_ITEM_CATEGORY_CD
  ,FACT.IA_ITEM_GROUP_CD                                    -- IA_ITEM_GROUP_CD
  ,FACT.IA_UNBUNDLE_MULTIPLIER                              -- IA_UNBUNDLE_MULTIPLIER
  ,FACT.ITEM_TYPE                                           -- ITEM_TYPE
  ,FACT.NETACE_RETURN_CD                                    -- NETACE_RETURN_CD
  ,FACT.ORDER_TYPE                                          -- ORDER_TYPE
  ,FACT.ORIG_INVC_DT                                        -- ORIG_INVC_DT  (always null)
  ,FACT.POS_ORIG_SLS_PRSN_ID                                -- POS_ORIG_SLS_PRSN_ID  (always null)
  ,FACT.PS_REGION_CD                                        -- PS_REGION_CD
  ,FACT.REBATE_IND                                          -- REBATE_IND
  ,FACT.REFUND_APPLIED_IND                                  -- REFUND_APPLIED_IND
  ,FACT.RETURN_EXCH_TYPE                                    -- RETURN_EXCH_TYPE
  ,FACT.SIM_IND                                             -- SIM_IND
  ,FACT.SLS_PRSN_ID                                         -- SLS_PRSN_ID
  ,FACT.SLS_TYPE                                            -- SLS_TYPE
  ,FACT.SR_RETURN_IND                                       -- SR_RETURN_IND
  ,FACT.USER_ID                                             -- USER_ID
  ,FACT.POS_SRC_ID                                          -- POS_SRC_ID
  ,FACT.LINE_ITEM_SLS_PRSN_ID                               -- LINE_ITEM_SLS_PRSN_ID
  ,FACT.DISCRETION_REAS_CD                                  -- DISCRETION_REAS_CD
  ,FACT.GIFT_CARD_NUM                                       -- GIFT_CARD_NUM

  ,FACT.UNIT_ONLY_IND                                       -- UNIT_ONLY_IND
  ,FACT.RETURN_INVC_NUM                                     -- RETURN_INVC_NUM
  ,FACT.RETURN_INVC_LINE_NUM                                -- RETURN_INVC_LINE_NUM
  
  ,FACT.ORIG_INVC_NUM                                      -- ORIG_INVC_NUM
  ,FACT.ORIG_STORE_NUM                                     -- ORIG_STORE_NUM
  ,FACT.ORIG_SLS_OUTLET_ID                                 -- ORIG_SLS_OUTLET_ID
  ,FACT.IA_ITEM_SUBCATEGORY_CD                             -- IA_ITEM_SUBCATEGORY_CD
  
  ,FACT.FULL_PRICE_AFTER_DISC_IND                           -- FULL_PRICE_AFTER_DISC_IND
  ,FACT.FULL_PRICE_B4_DISC_IND                              -- FULL_PRICE_B4_DISC_IND
  ,FACT.DISCOUNT_CD                                         -- DISCOUNT_CD
  ,FACT.ADJ_PS_DEPT_NUM                                     -- ADJ_PS_DEPT_NUM
  ,FACT.CNTRCT_TENURE_SUM                                   -- CNTRCT_TENURE_SUM
  ,CASE 
     WHEN COALESCE(FACT.ORIG_SOR_ID,'V') = 'ALLTEL' AND
          (SUBSTR(COALESCE(FACT.PROD_NM_PREV,'A_'),1,2) = 'A_' OR FACT.PROD_NM_PREV IN ('Q2438','NON-BRANDED 1X ONLY MODULE','NON-BRANDED EVDO MODULE','NON-BRANDED PDA MODULE')) AND
          (SUBSTR(COALESCE(FACT.PROD_NM,'A_'),1,2) <> 'A_' AND FACT.PROD_NM NOT IN ('Q2438','NON-BRANDED 1X ONLY MODULE','NON-BRANDED EVDO MODULE','NON-BRANDED PDA MODULE'))  
          THEN 'Y'
     WHEN COALESCE(FACT.ORIG_SOR_ID,'VZW') = 'VZW' AND
          (SUBSTR(COALESCE(FACT.PROD_NM_PREV,'X'),1,2) = 'A_' AND
          SUBSTR(COALESCE(FACT.PROD_NM,'X'),1,2) <> 'A_') 
          THEN 'Y'
     ELSE 'N' 
   END ALLTEL_IND	                                           -- ALLTEL_IND

  ,FACT.CLNR_ELIGIBILITY_IND                               -- CLNR_ELIGIBILITY_IND
  ,FACT.CUST_DEVICE_SRC                                    -- CUST_DEVICE_SRC
  
  ,FACT.ALT_UPGRADE_REAS_CD                                -- ALT_UPGRADE_REAS_CD
  ,FACT.CNTRCT_MTN                                         -- CNTRCT_MTN
  ,FACT.CNTRCT_CUST_ID                                     -- CNTRCT_CUST_ID
  ,FACT.CNTRCT_CUST_LINE_SEQ_ID                            -- CNTRCT_CUST_LINE_SEQ_ID
  ,FACT.CNTRCT_ACCT_NUM                                    -- CNTRCT_ACCT_NUM
  
  ,FACT.CREDIT_APP_NUM                                     -- CREDIT_APP_NUM
  
  ,FACT.EDGE_INTERESTED_IND                                -- EDGE_INTERESTED_IND
  ,FACT.EDGE_QUALIFIED_IND                                 -- EDGE_QUALIFIED_IND
  ,FACT.EDW_EDGE_QUALIFIED_IND                             -- EDW_EDGE_QUALIFIED_IND
  ,FACT.PYMNT_TENDER_TYPE_CD                               -- PYMNT_TENDER_TYPE_CD
  
  ,FACT.HR_EMP_ID                                          -- HR_EMP_ID
  ,FACT.CLIENT_ID                                          -- CLIENT_ID
  
  ,FACT.LOAN_TYPE_CD                                       -- LOAN_TYPE_CD
  
  ,FACT.CREDIT_LIMIT_AMT                                   -- CREDIT_LIMIT_AMT
  
  ,FACT.CURR_CONTRACT_TERM                                 -- CURR_CONTRACT_TERM
  ,FACT.PREV_CONTRACT_TERM                                 -- PREV_CONTRACT_TERM
  
  ,FACT.LINE_TYPE_CD                                       -- LINE_TYPE_CD
  ,FACT.VSN_CUST_TYPE_CD                                   -- VSN_CUST_TYPE_CD
  ,FACT.PPLAN_CD                                           -- PPLAN_CD
  ,FACT.PPLAN_MKT_CD                                       -- PPLAN_MKT_CD     
  
  ,FACT.CONV_IND                                           -- CONV_IND
  ,FACT.TRADEIN_IND                                        -- TRADEIN_IND  
  
  ,FACT.PPLAN_CD_PREV                                      -- PPLAN_CD_PREV    	
  ,FACT.PPLAN_MKT_CD_PREV                                  -- PPLAN_MKT_CD_PREV
  ,FACT.RPT_PPLAN_CD                                       -- RPT_PPLAN_CD      
  ,FACT.RPT_PPLAN_CD_PREV                                  -- RPT_PPLAN_CD_PREV
  
  ,FACT.RISK_PROFILE_CD                                    -- RISK_PROFILE_CD
  ,FACT.DOWN_PYMNT_PCT                                     -- DOWN_PYMNT_PCT
  ,FACT.EDW_EDGE_QUALIFIED_SRC_DESC                        -- EDW_EDGE_QUALIFIED_SRC_DESC
  
  ,FACT.INVENTORY_ADJ_IND                                  -- INVENTORY_ADJ_IND
  
	,FACT.EQP_CLASS_DESC
	,FACT.EQP_PROGRAM_CD
	,FACT.EQP_GRP_DESC
	,FACT.EQP_TYPE_DESC
	,FACT.EQP_CTGRY_DESC
	,FACT.EQP_DESC
	,FACT.UNBUNDLE_MULTIPLIER
	,FACT.TRANS_TS
	,FACT.INDIR_CHNL_FIN_IND
	,FACT.BYOD_SIM_ACT_IND
	,FACT.COLD_STOCK_IND
	,FACT.NEW_IN_BOX_IND
	,FACT.VZ2_SEGMT_CD									-- Added 1190401
	,FACT.POS_VZ2_SEGMT_CD								-- Added 1190401
	,FACT.POS_ECPD_PROFILE_ID							-- Added 1190401
	,FACT.POS_VSN_CUST_TYPE_CD							-- Added 1190401
	,FACT.EOM_CUST_ID   								-- Added 1190401
	,FACT.EOM_CUST_LINE_SEQ_ID  						-- Added 1190401
	,FACT.SDR_ELIG                                      -- Added 1200110
	,FACT.ERP_DIST_CHNL_CD                               -- Added 1210614
	,FACT.ERP_COST_CTR_CD                                -- Added 1210614
	,FACT.MYBIZ_CHNL_DESC                                -- Added 1210614
	,FACT.ERP_CUST_SUB_SEGMT_CD                          -- Added 1210811
	,FACT.ERP_LOC_CD                                     -- Added 1210811
	,FACT.POS_ERP_CUST_SUB_SEGMT_CD                      -- Added 1210811
	,FACT.ACT_ERP_DIST_CHNL_CD                           -- Added 1210811
	,FACT.PS_MKT_CD                                          -- ERP_MKT_CD -- Added 1210811
	,FACT.QUOTE_ID                                 -- QUOTE_ID  180                 -- Added 1210920
	,FACT.GIFT_IND                                 ---GIFT_IND ---Added 1211118
	,FACT.SIM_TYPE_CD                          ---Added 1220425
 	,CASE 	WHEN COH.BGID IS NOT NULL THEN 'PHYSICAL_LOC' 
			WHEN DEPL.BGID IS NOT NULL THEN 'ISPU_PHYSICAL_LOC'
			WHEN CBH.BGID IS NOT NULL THEN 'CUSTOMER_LOC'
			ELSE NULL
	END AS BGID_SOURCE										-- Added 1230810
	,COALESCE(COH.BGID,DEPL.BGID,CBH.BGID) AS BGID			-- Added 1230810
 
FROM    ${UDMSTGDB}.EQUIP_SUM_FACT_TMP2_${EQUIP_RUN_TYPE} FACT
LEFT JOIN NTL_PRDUSR_ALLVM.HQA_CONSUMER_OUTLET_HIST_V COH
ON FACT.RPT_MTH = COH.RPT_MTH
AND FACT.TRANS_SLS_OUTLET_ID = COH.SLS_OUTLET_ID
AND COH.EXECUTIVE_DOOR_CNT_IND = 'Y'
 
LEFT JOIN NTL_PRDUSR_ALLVM.HQA_CONSUMER_OUTLET_HIST_V DEPL
ON FACT.RPT_MTH = DEPL.RPT_MTH
AND FACT.DEPLETION_STORE_NUM = DEPL.STORE_NUM
AND DEPL.EXECUTIVE_DOOR_CNT_IND = 'Y'

LEFT JOIN NTL_PRDUSR_ALLVM.CUST_BGID_HIST_V   CBH
ON FACT.CUST_ID = CBH.CUST_ID
AND COALESCE(FACT.ACCT_NUM,'1') = COALESCE(CBH.ACCT_NUM,'1')
AND FACT.INVC_DT BETWEEN CBH.EFF_DT AND CBH.EXP_DT
;

    .if errorcode != 0 then .quit errorcode

CREATE VOLATILE TABLE ESF_PPLAN_CD_PREV_VT AS
(
SELECT
FACT.PYMNT_DT
,FACT.SOR_ID
,FACT.CUST_ID
,FACT.CUST_LINE_SEQ_ID
,FACT.PPLAN_CD AS PPLAN_CD
,FACT.PPLAN_MKT_CD AS PPLAN_MKT_CD
,FACT.ROW_TYPE_ID
,CALPH.PPLAN_CD as PPLAN_CD_PREV
,CALPH.PPLAN_MKT_CD as PPLAN_MKT_CD_PREV
,CALPH.EFF_DT
,CALPH.EXP_DT
,CALPH.CURR_PREV_IND
FROM ${UDMITVMDB}.EQUIP_SUM_FACT FACT

LEFT OUTER JOIN ${UDMITVMDB}.CUST_ACCT_LINE_PPLAN_HIST CALPH
ON FACT.SOR_ID = CALPH.SOR_ID
AND FACT.CUST_ID = CALPH.CUST_ID
AND FACT.CUST_LINE_SEQ_ID = CALPH.CUST_LINE_SEQ_ID
--AND CALPH.CURR_PREV_IND = 'P'
AND FACT.PYMNT_DT -1 BETWEEN CALPH.EFF_DT AND CALPH.EXP_DT
AND CALPH.EXP_DT>=FACT.PYMNT_DT -1

WHERE FACT.PYMNT_DT between ${EQUIP_BDAY_DT} and ${EQUIP_BDAY_DT}
AND FACT.ROW_TYPE_ID IN ('IUG','IUP')
AND CALPH.PPLAN_CD <> '99999'

QUALIFY ROW_NUMBER() OVER (PARTITION BY FACT.PYMNT_DT,FACT.SOR_ID,FACT.CUST_ID,FACT.CUST_LINE_SEQ_ID,FACT.ROW_TYPE_ID ORDER BY COALESCE(CALPH.EXP_DT, DATE '9999-12-31') DESC) =1
) WITH DATA
PRIMARY INDEX (PYMNT_DT, SOR_ID, CUST_ID, CUST_LINE_SEQ_ID)
ON COMMIT PRESERVE ROWS
;
    .if errorcode != 0 then .quit errorcode

UPDATE ${UDMDB}.EQUIP_SUM_FACT
FROM ESF_PPLAN_CD_PREV_VT P

SET PPLAN_CD_PREV = P.PPLAN_CD_PREV
,PPLAN_MKT_CD_PREV = P.PPLAN_MKT_CD_PREV

WHERE ${UDMDB}.EQUIP_SUM_FACT.PYMNT_DT = P.PYMNT_DT
AND ${UDMDB}.EQUIP_SUM_FACT.SOR_ID = P.SOR_ID
AND ${UDMDB}.EQUIP_SUM_FACT.CUST_ID = P.CUST_ID
AND ${UDMDB}.EQUIP_SUM_FACT.CUST_LINE_SEQ_ID = P.CUST_LINE_SEQ_ID
AND ${UDMDB}.EQUIP_SUM_FACT.ROW_TYPE_ID = P.ROW_TYPE_ID
AND ${UDMDB}.EQUIP_SUM_FACT.ROW_TYPE_ID IN ('IUG','IUP')
AND ${UDMDB}.EQUIP_SUM_FACT.FIN_UPG_FLAG = 'Y'
AND ${UDMDB}.EQUIP_SUM_FACT.ACQ_RET_IND <> 'A'
AND ${UDMDB}.EQUIP_SUM_FACT.PYMNT_DT between ${EQUIP_BDAY_DT} and ${EQUIP_BDAY_DT}
;
    .if errorcode != 0 then .quit errorcode

UPDATE ${UDMDB}.EQUIP_SUM_FACT 
FROM UDM_PRD_ITVM.BI_PRICE_PLAN BI_PPLAN
SET  RPT_PPLAN_CD = BI_PPLAN.RPT_PPLAN_CD
--WHERE ${UDMDB}.EQUIP_SUM_FACT.PPLAN_CD = BI_PPLAN.PPLAN_CD
WHERE COALESCE(${UDMDB}.EQUIP_SUM_FACT.PPLAN_CD,'UNK') = COALESCE(BI_PPLAN.PPLAN_CD,'UNK')
AND CASE WHEN ${UDMDB}.EQUIP_SUM_FACT.CAL_PREPAID_IND = 'Y'
         THEN 'ST.PRE'
         ELSE 'ST.POST'
    END = BI_PPLAN.PPLAN_SERVICE_TYPE_CD
AND ${UDMDB}.EQUIP_SUM_FACT.PYMNT_DT BETWEEN ${EQUIP_BDAY_DT} AND ${EQUIP_BDAY_DT}
AND ${UDMDB}.EQUIP_SUM_FACT.PYMNT_DT BETWEEN BI_PPLAN.EFF_DT AND BI_PPLAN.EXP_DT
AND ${UDMDB}.EQUIP_SUM_FACT.ROW_TYPE_ID IN ('IUG','IUP')
;
    .if errorcode != 0 then .quit errorcode

UPDATE ${UDMDB}.EQUIP_SUM_FACT 
FROM UDM_PRD_ITVM.BI_PRICE_PLAN BI_PPLAN
SET  RPT_PPLAN_CD_PREV = BI_PPLAN.RPT_PPLAN_CD
--WHERE ${UDMDB}.EQUIP_SUM_FACT.PPLAN_CD_PREV = BI_PPLAN.PPLAN_CD
WHERE COALESCE(${UDMDB}.EQUIP_SUM_FACT.PPLAN_CD_PREV,'UNK') = COALESCE(BI_PPLAN.PPLAN_CD,'UNK')
AND CASE WHEN ${UDMDB}.EQUIP_SUM_FACT.CAL_PREPAID_IND = 'Y'
         THEN 'ST.PRE'
         ELSE 'ST.POST'
    END = BI_PPLAN.PPLAN_SERVICE_TYPE_CD
AND ${UDMDB}.EQUIP_SUM_FACT.PYMNT_DT BETWEEN ${EQUIP_BDAY_DT} AND ${EQUIP_BDAY_DT}
AND ${UDMDB}.EQUIP_SUM_FACT.PYMNT_DT BETWEEN BI_PPLAN.EFF_DT AND BI_PPLAN.EXP_DT
AND ${UDMDB}.EQUIP_SUM_FACT.ROW_TYPE_ID IN ('IUG','IUP')
;
    .if errorcode != 0 then .quit errorcode
	

/*** Update Trans_Ts for last 45 Days ***/

CREATE VOLATILE TABLE DAD_VT AS
(
	SELECT
		 DAD.TRANS_DT
		,DAD.TRANS_TM
		,DAD.SLS_OUTLET_ID
		,DAD.SOR_ID
		,DAD.CUST_ID
		,DAD.CUST_LINE_SEQ_ID
		,DAD.ACCT_NUM
		,DAD.MTN
		,DAD.CHANGE_REAS_CD
		,DAD.ESN_NUM
		,DAD.PROD_NM
		,DAD.DEVICE_TYPE_CD
		,DAD.SLS_DIST_CHNL_TYPE_CD
		,MH.MANAGED_IND AS SLS_MANAGED_IND
		,MH.PS_MKT_CD   AS PS_MKT_CD
		,MH.REGION_CD   AS PS_REGION_CD
		,DAD.CLIENT_ID
		,DAD.LOAN_TYPE_CD
		,DAD.TRANS_TS
		,ROW_NUMBER() OVER (PARTITION BY DAD.TRANS_DT, DAD.SOR_ID, DAD.CUST_ID, DAD.CUST_LINE_SEQ_ID ORDER BY DAD.TRANS_TM DESC) AS ROWNUM
FROM ${UDMITVMDB}.DLY_ACTIVITY_DETAIL DAD
INNER JOIN ${UDMITVMDB}.MARKET_HIST MH
	ON  DAD.SOR_ID = MH.SOR_ID
  AND DAD.MKT_CD = MH.MKT_CD
	AND ((MH.EFF_DT <= DAD.TRANS_DT AND MH.EXP_DT IS NULL)	OR (MH.EFF_DT <= DAD.TRANS_DT AND MH.EXP_DT >= DAD.TRANS_DT ))
WHERE DAD.TRANS_DT = CAST(${EQUIP_BDAY_DT} AS DATE) - 45  -- <<<<< TRANS DATE HERE >>>>> --
	AND DAD.SOR_ID = 'V'
  AND DAD.ACTIVITY_CD IN ('QH','ES','EP','4G')  --updated on 1170208
  AND TRIM(DAD.CHANGE_REAS_CD) IN ('EU','NE','UP','U2','M1','M2','SD','S2','N5','AU','E2','AV','D2','EA','TA','SA','T2','S2','2D')   -- updated on 07/15/2013, 02/28/2014, 01/05/2017
  AND DAD.SLS_DIST_CHNL_TYPE_CD IN ('A','I','IN','R','V')
  AND MH.MKT_PROD_CD <> 'W'
  AND MH.INSTANCE_IND NOT IN ('LO','VH')
QUALIFY ROWNUM=1
)WITH DATA PRIMARY INDEX(TRANS_DT, CUST_ID, CUST_LINE_SEQ_ID) ON COMMIT PRESERVE ROWS;

	.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

UPDATE ESF
FROM ${UDMDB}.EQUIP_SUM_FACT ESF,
(SEL * FROM DAD_VT)DAD
SET TRANS_TS=DAD.TRANS_TS
WHERE DAD.TRANS_DT=ESF.PYMNT_DT
AND DAD.TRANS_TM=ESF.PYMNT_TM
AND DAD.CUST_ID=ESF.CUST_ID
AND DAD.CUST_LINE_SEQ_ID=ESF.CUST_LINE_SEQ_ID
AND ESF.ROW_TYPE_ID IN ('IUG','IUP')
AND ESF.PYMNT_DT>=${EQUIP_BDAY_DT}-45
AND ESF.TRANS_TS IS NULL
;

	.IF ERRORCODE != 0 THEN .QUIT ERRORCODE

/*** Waiting for Sign off
--**************************************************************
--* Update Double counting units sold from Netace + the proxy sale
--**************************************************************
	
DELETE FROM ${UDMSTGDB}.ESF_INDIRECT_NETACE_TRANS_STG;

    .IF ERRORCODE != 0 THEN .QUIT ERRORCODE
	
INSERT INTO ${UDMSTGDB}.ESF_INDIRECT_NETACE_TRANS_STG
SELECT
	RPT_MTH,
	COALESCE(SUBSTR(EQP_DEVICE_ID,1,14),ESN_NUM) AS DEVICE_ID
FROM ${UDMDB}.EQUIP_SUM_FACT 
WHERE SLS_DIST_CHNL_TYPE_CD IN ('I','A','R','V','IN','T','NC','D','N','M' )
AND FIN_TOT_FLAG = 'Y'
AND ROW_TYPE_ID = 'D'
AND RPT_MTH = CAST (${EQUIP_BMTH_DT} as DATE) 
GROUP BY 1,2
;

    .IF ERRORCODE != 0 THEN .QUIT ERRORCODE
	
COLLECT STATS ON ${UDMSTGDB}.ESF_INDIRECT_NETACE_TRANS_STG COLUMN (RPT_MTH ,DEVICE_ID );

    .IF ERRORCODE != 0 THEN .QUIT ERRORCODE

UPDATE E
FROM ${UDMDB}.EQUIP_SUM_FACT E,
(SEL * FROM ${UDMSTGDB}.ESF_INDIRECT_NETACE_TRANS_STG)X
SET 
FIN_TOT_FLAG = 'N', 
FIN_UPG_FLAG = 'N',
DUPLICATE_IND = 'Y'
--ESSBASE_CD = 'Y'
WHERE COALESCE(SUBSTR(EQP_DEVICE_ID,1,14),ESN_NUM) = X.DEVICE_ID
AND E.RPT_MTH=X.RPT_MTH
AND E.ROW_TYPE_ID IN ('IUG','IUP')
;
	
    .IF ERRORCODE != 0 THEN .QUIT ERRORCODE
***/


/*** Update VZ2_SEGMT_CD ***/							-- Added 1190401
UPDATE ${UDMDB}.EQUIP_SUM_FACT 
FROM UDM_PRD_ITVM.CUST_DIM_DLY_HIST  CDDH
SET  VZ2_SEGMT_CD = CDDH.DIM_VALUE 
,ERP_CUST_SUB_SEGMT_CD = CDDH.ERP_CUST_SUB_SEGMT_CD                         -- Added 1210811
WHERE ${UDMDB}.EQUIP_SUM_FACT.EOM_CUST_ID=CDDH.CUST_ID
AND ${UDMDB}.EQUIP_SUM_FACT.SOR_ID=CDDH.SOR_ID
AND ${UDMDB}.EQUIP_SUM_FACT.EOM_CUST_ID IS NOT NULL
AND ADD_MONTHS(CAST(${UDMDB}.EQUIP_SUM_FACT.RPT_MTH AS DATE),1)+1 BETWEEN CDDH.EFF_DT AND CDDH.EXP_DT
AND CDDH.EXP_DT>=ADD_MONTHS(CAST(${UDMDB}.EQUIP_SUM_FACT.RPT_MTH AS DATE),1)+1
AND ${UDMDB}.EQUIP_SUM_FACT.ROW_TYPE_ID IN ('IUG','IUP')
;
	

    .if errorcode != 0 then .quit errorcode
	
/***********VCGH-3277 - [Phase 2]Adding SIM_TYPE to DVC_SIM_INFO ************/

UPDATE T FROM ${UDMDB}.EQUIP_SUM_FACT T, 
(SELECT * FROM UDM_PRD_ITVM.DVC_SIM_INFO)S 
SET SIM_TYPE_CD=S.SIM_TYPE 
WHERE T. RPT_MTH = ${EQUIP_BMTH_DT}
AND T. ESN_NUM = S.DEVICE_ID 
AND T. PYMNT_DT <= S.SIM_INFO_END_DT 
AND S.DEVICE_ID_TYP = 'ICC' ;
	
		
 .IF ERRORCODE != 0 THEN .QUIT ERRORCODE
.QUIT ERRORCODE;
		
EOF
RETURN_CD=$?
if [ $RETURN_CD != 0 ]; then
    return $RETURN_CD
fi
