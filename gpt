#-----------------------TASK_VALIDATION_COLUMNS----------------------------------------------------------------
if not task_meta.empty:
    # Converting empty strings to null values
    task_meta = task_meta.infer_objects(copy=False).replace(r'^\s*$', np.nan, regex=True)

    # Remove whitespaces
    task_meta = task_meta.applymap(lambda x: x.strip() if isinstance(x, str) else x)

    # Updating the Variables
    if "dev" in env:
        task_meta.replace(variable_list, dev_list, inplace=True, regex=True)
        print(task_meta)
    elif "test" in env:
        task_meta.replace(variable_list, test_list, inplace=True, regex=True)
        print(task_meta)
    elif "ple" in env:
        task_meta.replace(variable_list, ple_list, inplace=True, regex=True)
        print(task_meta)
    else:
        task_meta.replace(variable_list, prod_list, inplace=True, regex=True)
        print(task_meta)

    task_meta = task_meta.astype("string") 

    # Updating the datatype for Integer Columns
    for col in task_integer_column:
        task_meta[col] = task_meta[col].replace('', np.nan).fillna('0').astype(int)

    # Updating the datatype for Boolean Columns    
    for col in task_boolean_column:
        task_meta[col] = task_meta[col].replace('', np.nan).map({'Y': True, 'N': False}).fillna(False)

    # Validations
    total_task_count = len(task_meta)

    # Platform Name Validation
    task_platform_validation_cnt = total_task_count - task_meta['platform_name'].str.lower().isin(platform_list).sum()

    # Environment Name Validation
    task_env_validation_cnt = total_task_count - task_meta['env_name'].str.lower().isin(env_list).sum()

    # Is Active Validation
    task_is_active_validation_cnt = total_task_count - task_meta['is_active'].fillna('n').str.upper().isin(['Y', 'N']).sum()

    # Task ID Validation (Mandatory and Non-Empty)
    task_id_validation_cnt = task_meta['task_id'].isna().sum() + \
                             task_meta['task_id'].astype(str).str.strip().eq('').sum()

    # DAG ID Validation (Mandatory and Non-Empty)
    dag_id_validation_cnt = task_meta['dag_id'].isna().sum() + \
                            task_meta['dag_id'].astype(str).str.strip().eq('').sum()

    # Source Type Validation (Must Match Predefined List)
    source_type_validation_cnt = total_task_count - task_meta['source_type'].str.lower().isin(source_type_list).sum()

    # Target Type Validation (Must Match Predefined List)
    target_type_validation_cnt = total_task_count - task_meta['target_type'].str.lower().isin(target_type_list).sum()

    # Checking the null values in Mandatory Columns
    task_col_check = []
    for mandatory_col in task_mandatory_column_list:
        if task_meta[mandatory_col].isna().any() or (task_meta[mandatory_col].astype(str).str.strip() == "").any():
            print("Checking for mandatory columns")
            task_col_check.append(mandatory_col)

    task_stg = 1

    # Raising Validation Errors
    if task_platform_validation_cnt > 0 or \
       task_env_validation_cnt > 0 or \
       task_is_active_validation_cnt > 0 or \
       task_id_validation_cnt > 0 or \
       dag_id_validation_cnt > 0 or \
       source_type_validation_cnt > 0 or \
       target_type_validation_cnt > 0 or \
       len(task_col_check) > 0:
        raise ValueError(
            f"TASK META VALIDATION FAILED:\n\n"
            f"Platform name validation failed count: {task_platform_validation_cnt if task_platform_validation_cnt > 0 else 'None'}\n"
            f"Environment name validation failed count: {task_env_validation_cnt if task_env_validation_cnt > 0 else 'None'}\n"
            f"Is_active validation failed count: {task_is_active_validation_cnt if task_is_active_validation_cnt > 0 else 'None'}\n"
            f"Task ID validation failed count: {task_id_validation_cnt if task_id_validation_cnt > 0 else 'None'}\n"
            f"DAG ID validation failed count: {dag_id_validation_cnt if dag_id_validation_cnt > 0 else 'None'}\n"
            f"Source type validation failed count: {source_type_validation_cnt if source_type_validation_cnt > 0 else 'None'}\n"
            f"Target type validation failed count: {target_type_validation_cnt if target_type_validation_cnt > 0 else 'None'}\n"
            f"Mandatory columns missing: {task_col_check if len(task_col_check) > 0 else 'None'}"
        )
    else:
        load_table(task_meta, task_table_id)
        print("Data Loaded Task staging Table")

else:
    print("Task Meta Tab is Empty")
    task_stg = 0
