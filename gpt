def post(self, request, *args, **kwargs):
    try:
        if not hasattr(self, 'logger'):
            self.logger = logging.getLogger(__name__)

        # ðŸ”¹ DEBUGGING: Print request method and content type
        print(f"DEBUG - Request method: {request.method}, Content Type: {request.content_type}")
        print(f"DEBUG - request.FILES: {request.FILES}")  # Log what Django receives

        # ðŸ”¹ Check if file is uploaded
        if 'file' not in request.FILES or not request.FILES['file']:
            self.logger.error("No file uploaded.")
            return JsonResponse({"status": "failure", "message": "No file uploaded. Make sure you are sending the request as multipart/form-data."}, status=400)

        file = request.FILES['file']
        self.logger.info(f"Received file: {file.name}")

        # ðŸ”¹ Read queries from file
        queries = self.read_queries_from_uploaded_file(file)
        if not queries:
            self.logger.error("No valid queries found.")
            return JsonResponse({"status": "failure", "message": "No valid queries found in the file."}, status=400)

        # ðŸ”¹ Execute Queries
        execution_status = self.execute_queries(queries)
        if execution_status["status"] == "failure":
            return JsonResponse(execution_status, status=500)

        return JsonResponse({"status": "success", "message": "File uploaded and queries executed successfully."}, status=200)

    except Exception as e:
        self.logger.error(f"Error processing request: {e}")
        return JsonResponse({"status": "failure", "message": f"Error processing request: {str(e)}"}, status=500)
