def load_result_to_bq_report_table(df):
    """
    Fixes data types before inserting into BigQuery
    """
    # Ensure correct data types
    numeric_columns = ["count_curr", "avg_count_prev", "variance_value", "std_dev_value", 
                       "sigma_2_value", "min_thresh_value", "max_thresh_value", "pct_change", 
                       "consistency_score", "dq_score", "rpt_seq_num"]
    
    for col in numeric_columns:
        if col in df.columns:
            df[col] = pd.to_numeric(df[col], errors='coerce')  # Convert to numeric, coerce errors to NaN

    # Convert date columns to datetime format
    if 'data_dt' in df.columns:
        df['data_dt'] = pd.to_datetime(df['data_dt'], errors='coerce')

    if 'insert_date' in df.columns:
        df['insert_date'] = pd.to_datetime(df['insert_date'], errors='coerce')

    if 'prfl_run_ts' in df.columns:
        df['prfl_run_ts'] = pd.to_datetime(df['prfl_run_ts'], errors='coerce')

    # Check for NaN values after conversion
    if df[numeric_columns].isna().sum().sum() > 0:
        print("⚠️ Warning: Some numeric values couldn't be converted. Check for missing data.")

    print(f"🔹 Data Types Fixed: {df.dtypes}")  # Debugging Output

    # Proceed to insert into BigQuery
    insert_into_bigquery(df)
